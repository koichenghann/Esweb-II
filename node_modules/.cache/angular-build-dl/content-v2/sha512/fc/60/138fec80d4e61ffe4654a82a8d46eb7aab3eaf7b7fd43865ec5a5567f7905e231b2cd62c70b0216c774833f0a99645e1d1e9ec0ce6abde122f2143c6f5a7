{"version":3,"sources":["webpack:///$_lazy_route_resource lazy namespace object","webpack:///src/app/add-collector-material-dialog/add-collector-material-dialog.component.ts","webpack:///src/app/add-collector-material-dialog/add-collector-material-dialog.component.html","webpack:///src/app/admin-manage-material/admin-manage-material.component.ts","webpack:///src/app/admin-manage-material/admin-manage-material.component.html","webpack:///src/app/admin-manage-material/material-form/material-form.ts","webpack:///src/app/admin-manage-material/material-form/material-form.html","webpack:///src/app/admin-manage-material/material.service.ts","webpack:///src/app/admin-manage-material/notification.service.ts","webpack:///src/app/app-routing.module.ts","webpack:///src/app/app.component.ts","webpack:///src/app/app.component.html","webpack:///src/app/app.module.ts","webpack:///src/app/appointment/appointment.service.ts","webpack:///src/app/auth/auth-login/auth-login.component.ts","webpack:///src/app/auth/auth-login/auth-login.component.html","webpack:///src/app/auth/auth-schedule/auth-schedule.component.ts","webpack:///src/app/auth/auth-schedule/auth-schedule.component.html","webpack:///src/app/auth/auth-signup/auth-signup.component.ts","webpack:///src/app/auth/auth-signup/auth-signup.component.html","webpack:///src/app/auth/auth.guard.ts","webpack:///src/app/auth/auth.service.ts","webpack:///src/app/collector-record-submission/collector-record-submission.component.ts","webpack:///src/app/collector-record-submission/collector-record-submission.component.html","webpack:///src/app/dashboard/dashboard-admin.component.ts","webpack:///src/app/dashboard/dashboard-admin.component.html","webpack:///src/app/dashboard/dashboard-collector.component.ts","webpack:///src/app/dashboard/dashboard-collector.component.html","webpack:///src/app/dashboard/dashboard-sidenav/dashboard-sidenav.component.ts","webpack:///src/app/dashboard/dashboard-sidenav/dashboard-sidenav.component.html","webpack:///src/app/dashboard/dashboard-user.component.ts","webpack:///src/app/dashboard/dashboard-user.component.html","webpack:///src/app/datatable/create-material-form/create-material-form.component.ts","webpack:///src/app/datatable/create-material-form/create-material-form.component.html","webpack:///src/app/datatable/datatable.component.ts","webpack:///src/app/datatable/datatable.component.html","webpack:///src/app/datatable/shared/create-material.service.ts","webpack:///src/app/datatable/shared/material.service.ts","webpack:///src/app/datatable/shared/notification.service.ts","webpack:///src/app/history/history.component.ts","webpack:///src/app/history/history.component.html","webpack:///src/app/home/home.component.ts","webpack:///src/app/home/home.component.html","webpack:///src/app/profile/profile.component.ts","webpack:///src/app/profile/profile.component.html","webpack:///src/app/submission/submission.service.ts","webpack:///src/app/user-make-appointment/user-make-appointment.component.ts","webpack:///src/app/user-make-appointment/user-make-appointment.component.html","webpack:///src/app/user-nav/user-nav.component.ts","webpack:///src/app/user-nav/user-nav.component.html","webpack:///src/environments/environment.ts","webpack:///src/main.ts"],"names":["webpackEmptyAsyncContext","req","Promise","resolve","then","e","Error","code","keys","module","exports","id","AddCollectorMaterialDialogComponent","data","materialsService","console","log","selector","templateUrl","styleUrls","AdminManageMaterialComponent","titleService","title","setTitle","MaterialFormComponent","notificationService","materialData","getAllMaterials","resetForm","form","value","selectedMaterial","_id","materialID","materialName","description","pointsPerKg","invalid","submitMaterial","subscribe","res","success","putMaterial","materials","material","confirm","deleteMaterial","addMaterial","onSubmit","providers","MaterialsService","http","materialsUpdated","baseURL","materialExistListener","asObservable","post","result","length","next","push","get","put","delete","materialId","providedIn","NotificationService","snackBar","msg","open","duration","routes","path","component","canActivate","AppRoutingModule","forRoot","imports","routingComponents","AppComponent","AppModule","declarations","bootstrap","entryComponents","AppointmentService","router","materialService","authService","subRetrievedListener","AuthLoginComponent","hide","initialError","usernameError","passwordError","isValid","setCurrentUrl","window","location","pathname","logout","validators","required","validateAuth","bind","username","password","checkCredentialValidity","authStatusListener","response","validateLoginField","control","input","hasError","controls","updateValueAndValidity","notMatch","AuthScheduleComponent","week","tableLoadLiao","timeIsValid","errorMessage","timeError","timePicker","timeTable","document","getElementById","weekDay","i","day","startTime","endTime","tempCollector","getTempCol","table","table1","week1","getElementsByTagName","row","innerHTML","selectedCell","parentElement","col2","col3","getAttribute","cellValue","getElementsByClassName","focus","setAttribute","addEventListener","validationList","errorList","validationTable","col1","error","valid","userData","scheduleData","createColPart2","confirmCreation","AuthSignupComponent","isUnique","selectedIndex","recycler_usernameError","recycler_passwordError","recycler_fullNameError","recycler_addressError","recycler_scheduleError","collector_usernameError","collector_passwordError","collector_fullNameError","collector_addressError","collector_scheduleError","usernameInput","mode","setFormGroup","initialiseCol","theCol","form_collector","setValue","fullName","address","form_recycler","uniqueUsernameListener","getuniqueUsernameListener","checkUserExist","schedule","userType","createColPart1","createUser","minLength","maxLength","pattern","validateUnique","tabChangeEvent","reset","removeTempCol","xd2","xd1","unique","tabChanged","AuthGuard","state","prev","getPrevUrl","curr","getCurrentUrl","isAuth","getIsAuth","getUserType","targetUrl","url","toString","navigate","AuthService","collectorMaterialListener","MaterialUpdatedListener","recyclerExistListener","pointsUpdatedLisetener","userRetrieved","scheduleRetrieved","userFound","getAuthData","getCollector","localStorage","removeItem","userId","getUserId","userID","passwordChanged","getCollectorMaterials","tempCollectorSignupDetail","totalPoints","ecoLevel","saveCollector","collectorData","alert","collector","setItem","JSON","stringify","parse","getItem","message","credential","token","expiresInDuration","expiresIn","setAuthTimer","now","Date","expirationDate","getTime","saveAuthData","clearAuthData","tokenTimer","setTimeout","toISOString","setPrevUrl","form_submission","enable","CollectorRecordSubmissionComponent","subService","matService","collectors","mobile","currentRoute","appointments","dataSource","isRecordingSubmission","isAddingSubmission","selectedAppointment","submission_materialError","submission_recyclerError","submission_weightError","recyclerExist","materialExist","setMode","subscribeToSubmissionRetrieve","getAppointment","getMaterials","subscribeToMaterialExist","subscribeToRecyclerExist","getCollectors","getPointsUpdatedListener","getPoints","event","screen","width","getSubRetrievedListerner","convertToTableData","getRecyclerExistListener","recycler","getMaterialExistListener","today","date","getFullYear","getMonth","slice","getDate","submission","submissionID","proposedDate","actualDate","weightInKg","pointsAwarded","status","updateSubmission","addSubmission","getSubmissions","filter","appt","recyclerUsername","collectorUsername","genDummySub","disable","validateSubmissionInput","validateMaterialExist","validateRecyclerExist","min","notMaterial","notRecycler","checkMaterialExist","checkRecyclerExist","onResize","DashboardAdminComponent","userName","getFullName","DashboardCollectorComponent","ecolevel","pointToLevel","ecoPoints","pointsNeeded","pointsNeededCaption","upperLevel","Math","round","Number","DashboardSideNavComponent","breakpointObserver","isHandset$","observe","Handset","pipe","matches","DashboardUserComponent","upperPoints","progress","charAt","toUpperCase","CreateMaterialFormComponent","service","getMaterial","position","DatatableComponent","dialog","displayedColumns","intializeFormGroup","dialogConfig","disableClose","autoFocus","onClose","onCreate","CreateMaterialService","$key","MaterialService","HistoryComponent","histories","firstRow","sortedByActualDate","sortedByStatus","sortedBySubmissionID","viewHistory","subscribeToMaterialsUpdate","subscribeToHistory","getHistory","getMaterialsUpdatedListener","mat","Object","assign","selected","sortHistoryByID","history","expanded","detailsForExpandedCell","convertTableData","sort","a","b","y","undefined","HomeComponent","ProfileComponent","isEditingUser","isEditingSched","collectorMaterials","initialiseUserData","initialiseScheduleData","initialiseMaterialTable","getCollectorMaterialUpdatedListener","colMat","dialogRef","afterClosed","dialogClosed","saveCollectorMaterial","updateMaterial","saveUserData","cells","saveScheduleData","formValid","currentUser","updateProfile","updateSchedule","userRetrievedListener","getUserIsRetrieved","getUser","scheduleRetrievedListener","getScheduleIsRetrieved","getSchedule","editUserData","SubmissionService","criteria","recyclerId","collectorId","MakeAppointmentComponent","appmtService","viewCollectorMaterial","viewSubmitAppointment","viewDone","showLoadingBar","errorDateMsg","getCollectorMaterial","collectorID","inProposedDate","UserNavComponent","auhtService","list_item_1","list_item_2","list_item_3","list_item_4","list_item_5","list_item_6","route1","route2","route3","route4","route5","route6","environment","production","bootstrapModule","catch","err"],"mappings":"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","file":"main-es5.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { Component, OnInit, inject, Inject } from '@angular/core';\nimport { MatDialogRef, MAT_DIALOG_DATA, MatDialogModule, MatDialog } from '@angular/material/dialog';\nimport { MatCheckbox } from '@angular/material/checkbox';\n//import { MAT_DIALOG_DATA } from '@angular/material/MatDialog/MAT_DIALOG_DATA';\nimport { MaterialsService } from '../admin-manage-material/material.service';\nimport { Material } from '../admin-manage-material/material.model';\nimport { SelectionModel } from '@angular/cdk/collections';\nimport { MatTableDataSource } from '@angular/material/table';\n@Component({\n  selector: 'app-add-collector-material-dialog',\n  templateUrl: './add-collector-material-dialog.component.html',\n  styleUrls: ['./add-collector-material-dialog.component.css']\n})\n\nexport class AddCollectorMaterialDialogComponent implements OnInit {\n\n  constructor(@Inject(MAT_DIALOG_DATA) public data: any, public materialsService: MaterialsService) {\n    console.log('constructor hellow')\n  }\n\n  ngOnInit(): void {\n  }\n}\n","<div  mat-dialog-content class=\"bg-dark title\">\n  <h2 class=\"text-center\">Select Material</h2>\n\n</div>\n<!--<mat-dialog-content>\n  Hi {{ data.name }} you will be logged out\n\n</mat-dialog-content>-->\n\n<div mat-dialog-content class=\"content\">\n\n\n  <table class=\"table\">\n    <thead>\n      <tr>\n        <th>id</th>\n        <th>name</th>\n        <th>points<br>/kg</th>\n        <th>check</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr #row *ngFor=\"let material of data\">\n\n        <td>{{ material.materialID }}</td>\n        <td>{{ material.materialName }}</td>\n        <td>{{ material.pointsPerKg }}</td>\n        <!--<td><input type=\"checkbox\" name=\"materialCheck\" value=\"\" (click)=\"onClick(row, material._id)\"></td>-->\n        <td><mat-checkbox [(ngModel)]=\"material.selected\"></mat-checkbox></td>\n      </tr>\n    </tbody>\n  </table>\n\n</div>\n<div mat-dialog-actions align=\"end\" >\n  <button mat-button mat-dialog-close=\"false\" class=\"btn-cancel\">Cancel</button>\n  <button mat-button [(mat-dialog-close)]=\"data\" class=\"btn-save\">Save</button>\n</div>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\n\n\n@Component({\n  selector: 'admin-manage-material',\n  templateUrl: './admin-manage-material.component.html',\n  styleUrls: ['./admin-manage-material.component.css'],\n})\n\nexport class AdminManageMaterialComponent {\n  title = 'app';\n  constructor(private titleService:Title) {\n    this.titleService.setTitle(\"ESWeb | Manage-Material\"\n    );}\n\n}\n","<dashboard-sidenav>\n  <div class=\"container-fluid\">\n    <div class=\"container\">\n      <!--<material-table></material-table>-->\n    </div>\n\n    <!--\n      <div class=\"row\">\n      <div class=\"container-fluid col-4\">\n        <material-form></material-form>\n      </div>\n\n      <div class=\"container-fluid col-8\">\n        <material-table></material-table>\n      </div>\n    </div>\n     -->\n  </div>\n\n\n  <material-form></material-form>\n</dashboard-sidenav>\n","import { Component, OnInit } from '@angular/core';\n\nimport { NgForm } from '@angular/forms';\nimport { MaterialsService } from '../material.service';\nimport { NotificationService } from '../notification.service';\nimport { Material } from '../material.model';\nimport { ThrowStmt } from '@angular/compiler';\n\ndeclare var M:any;\n\n@Component({\n  selector: 'material-form',\n  templateUrl: './material-form.html',\n  styleUrls: ['./material-form.css'],\n  providers: [MaterialsService]\n})\n\nexport class MaterialFormComponent implements OnInit {\n\n\n\n\n  constructor(public materialsService: MaterialsService, private notificationService: NotificationService) {}\n\n  materialData = [];\n\n  ngOnInit(){\n    this.getAllMaterials();\n    this.resetForm();\n    //if(this.materialsService.selectedMaterial == undefined){\n    //    this.materialsService.selectedMaterial=new Material();\n    //}\n\n  }\n\n  //reset form\n  resetForm(form?: NgForm){\n    console.log('reset form tan');\n    if(form){\n      //form.reset();\n      form.resetForm(form.value);\n    }\n\n    this.materialsService.selectedMaterial = {\n      _id: \"\",\n      materialID: \"\",\n      materialName: \"\",\n      description: \"\",\n      pointsPerKg: \"\",\n    }\n\n\n    //form.getControl('description').setErrors(null);\n    //form.resetForm();\n    //this.getAllMaterials();\n  }\n\n  //submit form\n  onSubmit(form : NgForm){\n    if (form.invalid) {\n      return;\n    }\n    if(form.value._id == \"\" || form.value._id == null){\n      console.log(\"create ran\")\n      this.materialsService.submitMaterial(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.getAllMaterials();\n         this.notificationService.success('New Material has created successfully!');\n         //M.toast({ html: 'Saved successfully',classes: 'rounded' });\n      });\n    }\n    else {\n      console.log(\"update ran, id: \" + form.value._id);\n      this.materialsService.putMaterial(form.value).subscribe((res) => {\n        this.resetForm(form);\n        this.getAllMaterials();\n\n         this.notificationService.success('Material has been updated successfully!');\n         //M.toast({ html: 'Saved successfully',classes: 'rounded' });\n      });\n    }\n\n  }\n\n  //get all material data\n  getAllMaterials(){\n    this.materialsService.getAllMaterials().subscribe(res =>{\n      this.materialData = res.materials;\n    });\n  }\n\n  onEdit(material : Material){\n    this.materialsService.selectedMaterial = material;\n    console.log(this.materialsService.selectedMaterial);\n  }\n\n  onDelete(_id: string, form: NgForm) {\n    console.log(\"delete clicked, id: \" + _id);\n     if (confirm(\"Are you sire to delete this material?\")){\n       this.materialsService.deleteMaterial(_id).subscribe((res)=>{\n         this.getAllMaterials();\n         this.resetForm();\n         this.notificationService.success('Material has been deleted successfully!');\n       });\n     }\n  }\n\n\n\n  onAddMaterial(form: NgForm) {\n    console.log(\"form is valid: \" + form.invalid);\n    if (form.invalid) {\n      return;\n    }\n\n    const material = {\n      materialID: form.value.materialID,\n      materialName: form.value.materialName,\n      description: form.value.description,\n      pointsPerKg: form.value.pointsPerKg,\n    };\n    form.resetForm();\n    this.getAllMaterials();\n    this.materialsService.addMaterial(form.value.materialID, form.value.materialName, form.value.description, form.value.pointsPerKg);\n\n  }\n\n  /*refreshMaterialList() {\n    this.materialsService.getMaterials().subscribe((res) => {});\n  }*/\n\n\n}\n","\n<div class=\"container-fluid\">\n\n  <div class=\"row\">\n    <div class=\"container-fluid col-lg-4 col-md-12 col-sm-12\">\n<mat-card class=\"mt-2 mb-4\">\n  <div class=\"container text-center\">\n    <h2 class=\"display-2\">Material Form</h2>\n  </div>\n  <form (submit)=\"onSubmit(materialForm)\" #materialForm=\"ngForm\">\n\n      <input\n\n        type=\"hidden\"\n        name=\"_id\"\n        #_id=\"ngModel\"\n        [(ngModel)] = \"this.materialsService.selectedMaterial._id\"\n        placeholder=\"Enter material ID:\"\n        #materialID = \"ngModel\">\n\n    <mat-form-field>\n      <input\n        matInput\n        [(ngModel)] = \"this.materialsService.selectedMaterial.materialID\"\n        type=\"text\"\n        name=\"materialID\"\n        ngModel\n        placeholder=\"Enter material ID:\"\n        required\n        minlength=\"3\"\n        #materialID = \"ngModel\">\n      <mat-error *ngIf=\"materialID.invalid\">Please enter a material ID!</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        matInput\n        [(ngModel)] = \"this.materialsService.selectedMaterial.materialName\"\n        type=\"text\"\n        name=\"materialName\"\n        ngModel\n        placeholder=\"Enter material Name:\"\n        required\n        minlength=\"3\"\n        #materialName = \"ngModel\"\n        >\n      <mat-error *ngIf=\"materialName.invalid\">Please enter a material name!</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <input\n        matInput\n        [(ngModel)] = \"this.materialsService.selectedMaterial.pointsPerKg\"\n        type=\"text\"\n        name=\"pointsPerKg\"\n        ngModel\n        placeholder=\"Enter points per KG of material:\"\n        required\n        minlength=\"3\"\n        #pointsPerKg = \"ngModel\">\n      <mat-error *ngIf=\"pointsPerKg.invalid\">Please enter a point per Kg of material!</mat-error>\n    </mat-form-field>\n\n    <mat-form-field>\n      <textarea\n        matInput\n        [(ngModel)] = \"this.materialsService.selectedMaterial.description\"\n        rows=\"10\"\n        name=\"description\"\n        ngModel\n        #postData\n        required\n        placeholder=\"Enter description:\"\n        #description=\"ngModel\"></textarea>\n      <mat-error *ngIf=\"description.invalid\">Please write a description!</mat-error>\n    </mat-form-field>\n    <br>\n    <div class=\"container-fluid text-right mt-2\">\n      <button class=\"mr-2\" mat-raised-button color=\"success\" type =\"submit\" [disabled]=\"!materialForm.valid\">Submit</button>\n      <button mat-raised-button color=\"success\" (click)=\"resetForm(materialForm)\" >Reset</button>\n    </div>\n\n\n\n  </form>\n\n</mat-card>\n\n<!--<mat-card>\n  <mat-form-field>\n    <textarea matInput rows=\"10\" [(ngModel)]=\"enteredContent\"></textarea>\n  </mat-form-field>\n  <button mat-raised-button color=\"primary\" (click)='onAddPost2()'>Save Post</button>\n\n</mat-card>\n-->\n\n  </div>\n\n\n  <div class=\"container-fluid col-lg-8 col-md-12 col-sm-12\">\n    <mat-card class=\"mt-2\">\n    <div class=\"container text-center\">\n      <h1 class=\"display-2\">List of Materials</h1>\n    </div>\n    <table class=\"table\">\n      <thead>\n        <tr>\n          <th scope=\"col\" class=\"materialID_col\">Material ID</th>\n          <th scope=\"col\" class=\"materialName_col\">Material Name</th>\n          <th scope=\"col\" class=\"pointsPerKg_col\">Points per Kg</th>\n          <th scope=\"col\" class=\"description_col\">Description</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr scope=\"row\" *ngFor=\"let material of materialData\">\n          <td>{{material.materialID}}</td>\n          <td>{{material.materialName}}</td>\n          <td>{{material.pointsPerKg}}</td>\n          <td>{{material.description}}</td>\n          <td>\n            <a class=\"mb-1 mr-1\" (click)=\"onEdit(material)\" mat-mini-fab color=\"primary\"><mat-icon>edit</mat-icon></a>\n            <a class=\"mb-1 mr-1\" (click)=\"onDelete(material._id, materialForm)\"mat-mini-fab color=\"primary\"><mat-icon>delete</mat-icon></a>\n          </td>\n        </tr>\n      </tbody>\n\n    </table>\n  </mat-card>\n  </div>\n\n</div>\n</div>\n","import { Material } from './material.model';\nimport { Injectable } from '@angular/core'\nimport { Subject } from 'rxjs';\nimport { HttpClient } from  \"@angular/common/http\";\n\n@Injectable({providedIn: 'root'})\nexport class MaterialsService {\n\n  selectedMaterial: Material;\n\n  private materials: Material[] = [];\n  private materialsUpdated = new Subject<Material[]>();\n\n  readonly baseURL = 'http://localhost:3000/material'\n\n  materialExistListener = new Subject<any>();\n\n  //inject http into postservice\n  constructor(private http: HttpClient){}\n\n\n\n  //get post from server\n  /*getMaterials(){\n    //http get method expect path to server\n    //to listen to the request need to put subscride\n    //subscride method: first one for new data, second for errors ,third one when it completes\n    this.http.get<{message: string, materials: Material[]}>('http://localhost:3000/api/material').subscribe((materialData) => {\n\n      //data from server\n      this.materials = materialData.materials;\n\n      //notify angular app\n      this.materialsUpdated.next([...this.materials]);\n    });\n\n    return this.materials;\n  }*/\n\n  //angular http client use an observable\n\n  //customer made by koi\n\n  getMaterialExistListener() {\n    return this.materialExistListener.asObservable();\n  }\n  checkMaterialExist(materialName) {\n    this.http.post<any>('http://localhost:3000/api/material/findMaterial', {materialName:materialName}).subscribe( result => {\n      if ( result.length > 0 ) {\n        this.materialExistListener.next(result[0]);\n      }\n    });\n  }\n\n\n  getMaterialsUpdatedListener(){\n    return this.materialsUpdated.asObservable();\n  }\n\n  addMaterial( materialID: string, materialName: string ,description: string ,pointsPerKg: string){\n    const materials: Material = { _id: null, materialID: materialID, materialName: materialName, description:description, pointsPerKg: pointsPerKg};\n    this.materials.push(materials);\n    this.materialsUpdated.next([...this.materials]);\n  }\n\n\n  //submit new material\n  submitMaterial(material: Material){\n    return this.http.post('http://localhost:3000/api/material/createMaterial', material);\n  }\n\n  //get materials\n  getAllMaterials(){\n    return this.http.get<{materials: any}>('http://localhost:3000/api/material/getMaterials');\n  }\n\n putMaterial(material: Material){\n   return this.http.put(\"http://localhost:3000/api/material/updateMaterial\",\n    {\n      _id: material._id,\n      materialID: material.materialID,\n      materialName: material.materialName,\n      description: material.description,\n      pointsPerKg: material.pointsPerKg\n    }\n  );\n }\n\n deleteMaterial(_id: String) {\n   return this.http.delete(\"http://localhost:3000/api/material/\"  +_id)\n }\n\n\n getCollectors(materialId) {\n   return this.http.post(\"http://localhost:3000/api/material/getCollectors\", {materialId: materialId});\n }\n\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n\n  success(msg){\n    this.snackBar.open(msg, '', {duration: 3000});\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { DashboardAdminComponent } from './dashboard/dashboard-admin.component';\nimport { HomeComponent } from './home/home.component';\nimport { AuthSignupComponent } from './auth/auth-signup/auth-signup.component';\nimport { AuthLoginComponent } from './auth/auth-login/auth-login.component';\nimport { DashboardUserComponent } from './dashboard/dashboard-user.component';\nimport { DashboardCollectorComponent } from './dashboard/dashboard-collector.component';\nimport { AdminManageMaterialComponent } from './admin-manage-material/admin-manage-material.component';\nimport { AuthGuard } from './auth/auth.guard';\nimport { AuthScheduleComponent } from './auth/auth-schedule/auth-schedule.component';\nimport { ProfileComponent } from './profile/profile.component';\nimport { HistoryComponent } from './history/history.component';\nimport { MakeAppointmentComponent } from './user-make-appointment/user-make-appointment.component';\nimport { CollectorRecordSubmissionComponent } from './collector-record-submission/collector-record-submission.component';\n\nconst routes: Routes = [\n  //{ path: '', redirectTo: '/home', pathMatch: 'prefix'},\n  { path: '', component: HomeComponent},\n  { path: 'home', component: HomeComponent},\n  { path: 'dashboard-admin',component: DashboardAdminComponent, canActivate: [AuthGuard]},\n  { path: 'auth/login',component: AuthLoginComponent, canActivate: [AuthGuard]},\n  { path: 'auth/signup',component: AuthSignupComponent, canActivate: [AuthGuard]},\n  { path: 'auth/schedule', component: AuthScheduleComponent, canActivate: [AuthGuard]},\n  { path: 'manage-profile', component: ProfileComponent, canActivate: [AuthGuard]},\n  { path: 'dashboard-user', component: DashboardUserComponent, canActivate: [AuthGuard]},\n  { path: 'dashboard-collector', component: DashboardCollectorComponent,  canActivate: [AuthGuard]},\n  { path: 'admin/manage-material', component: AdminManageMaterialComponent, canActivate: [AuthGuard]},\n  { path: 'history', component: HistoryComponent, canActivate: [AuthGuard] },\n  { path: 'make-appointment', component: MakeAppointmentComponent, canActivate: [AuthGuard] },\n  { path: 'record-submission', component: CollectorRecordSubmissionComponent, canActivate: [AuthGuard] },\n  { path: 'add-submission', component: CollectorRecordSubmissionComponent, canActivate: [AuthGuard] },\n\n  //{ path: '**', component: PageNotFoundComponent}\n];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule {}\nexport const routingComponents = [HomeComponent, DashboardAdminComponent, DashboardUserComponent]\n","import { Component } from '@angular/core';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.css'],\n  \n})\nexport class AppComponent {\n  title = 'esweb';\n}\n","\n\n<!--<div class=\"navi\">\n<h1>Navigation Tester</h1>\n<nav>\n  <a class=\"btn btn-primary m-2\" routerLink=\"/home\" routerLinkActive=\"active\">ESWEB homepage (LandingPage) </a>\n  <br>\n  <a class=\"btn btn-primary m-2\" routerLink=\"/dashboard-admin\" routerLinkActive=\"active\">Admin Dashboard </a>\n</nav>\n</div>-->\n\n<!--Routed view-->\n<router-outlet></router-outlet>\n","//angular-module\nimport { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { FormsModule } from '@angular/forms';\nimport { AppRoutingModule } from './app-routing.module';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { Observable } from 'rxjs';\nimport { LayoutModule } from '@angular/cdk/layout';\nimport { HttpClientModule } from  \"@angular/common/http\";\n\n//angular-material\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatButtonModule } from '@angular/material/button';\nimport { MatToolbarModule } from '@angular/material/toolbar';\nimport { MatExpansionModule } from '@angular/material/expansion';\nimport { MatMenuModule } from '@angular/material/menu';\nimport { MatSidenavModule } from '@angular/material/sidenav';\nimport { MatIconModule } from '@angular/material/icon';\nimport { MatListModule } from '@angular/material/list';\nimport { MatTableModule } from '@angular/material/table';\nimport  { MatProgressBarModule } from '@angular/material/progress-bar';\nimport { MatTabsModule } from '@angular/material/tabs';\nimport { MatProgressSpinnerModule } from '@angular/material/progress-spinner';\nimport { MatGridListModule } from '@angular/material/grid-list';\nimport { MatDialogModule } from '@angular/material/dialog';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatPaginatorModule } from '@angular/material/paginator';\nimport { MatSortModule } from '@angular/material/sort';\nimport { MatSnackBarModule } from '@angular/material/snack-bar';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { MatSelectModule } from '@angular/material/select';\nimport { MatDatepickerModule } from '@angular/material/datepicker';\nimport { MatNativeDateModule } from '@angular/material/core';\n\n\n//angular-component\nimport { AppComponent } from './app.component';\nimport { HomeComponent } from './home/home.component';\nimport { DashboardSideNavComponent } from './dashboard/dashboard-sidenav/dashboard-sidenav.component';\nimport { DashboardAdminComponent } from './dashboard/dashboard-admin.component';\nimport { DashboardUserComponent } from './dashboard/dashboard-user.component';\nimport { DashboardCollectorComponent } from './dashboard/dashboard-collector.component';\nimport { DatatableComponent } from './datatable/datatable.component';\nimport { UserNavComponent } from './user-nav/user-nav.component';\nimport { AdminManageMaterialComponent } from './admin-manage-material/admin-manage-material.component';\nimport { MakeAppointmentComponent } from './user-make-appointment/user-make-appointment.component';\n\n//import { LogoutDialogComponent } from './dashboard/dashboard-sidenav/dashboard-sidenav.component';\nimport { CreateMaterialFormComponent } from './datatable/create-material-form/create-material-form.component';\nimport { MaterialFormComponent } from './admin-manage-material/material-form/material-form';\nimport { AuthLoginComponent } from './auth/auth-login/auth-login.component';\nimport { AuthSignupComponent } from './auth/auth-signup/auth-signup.component';\nimport { AuthScheduleComponent } from './auth/auth-schedule/auth-schedule.component';\nimport { ProfileComponent } from './profile/profile.component';\n\n//service\nimport { MaterialsService } from './admin-manage-material/material.service';\nimport { NotificationService } from './admin-manage-material/notification.service';\nimport { AddCollectorMaterialDialogComponent } from './add-collector-material-dialog/add-collector-material-dialog.component';\nimport { HistoryComponent } from './history/history.component';\nimport { CollectorRecordSubmissionComponent } from './collector-record-submission/collector-record-submission.component';\n\n@NgModule({\n  declarations: [\n    AppComponent,\n    HomeComponent,\n    DashboardSideNavComponent,\n    DashboardAdminComponent,\n    DatatableComponent,\n    UserNavComponent,\n    DashboardUserComponent,\n    AuthLoginComponent,\n    AuthSignupComponent,\n    AuthScheduleComponent,\n    DashboardCollectorComponent,\n    AdminManageMaterialComponent,\n    CreateMaterialFormComponent,\n    ProfileComponent,\n    MaterialFormComponent,\n    AddCollectorMaterialDialogComponent,\n    HistoryComponent,\n    MakeAppointmentComponent,\n    CollectorRecordSubmissionComponent,\n\n    //LogoutDialogComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    FormsModule,\n    ReactiveFormsModule,\n    BrowserAnimationsModule,\n    MatInputModule,\n    MatCardModule,\n    MatButtonModule,\n    MatToolbarModule,\n    MatExpansionModule,\n    LayoutModule,\n    MatSidenavModule,\n    MatIconModule,\n    MatListModule,\n    MatMenuModule,\n    MatTableModule,\n    MatProgressBarModule,\n    MatProgressSpinnerModule,\n    MatTabsModule,\n    HttpClientModule,\n    MatGridListModule,\n    MatDialogModule,\n    MatFormFieldModule,\n    MatPaginatorModule,\n    MatSortModule,\n    MatSnackBarModule,\n    MatCheckboxModule,\n    MatSelectModule,\n    MatDatepickerModule,\n    MatNativeDateModule\n  ],\n  exports: [HttpClientModule],\n  providers: [/*AdminManageMaterialService*/],\n  bootstrap: [AppComponent],\n  entryComponents: [CreateMaterialFormComponent,AdminManageMaterialComponent, AddCollectorMaterialDialogComponent ]\n})\nexport class AppModule { }\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { MaterialService } from '../datatable/shared/material.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AppointmentService implements OnInit{\n\n  subRetrievedListener = new Subject<any>();\n\n  constructor(\n    private http: HttpClient,\n    public router: Router,\n    public materialService: MaterialService,\n    public authService: AuthService\n  ) {}\n\n\n  ngOnInit(): void {\n\n  }\n\n\n  // getCollectorMaterial(material: any){\n  //   let userId = this.authService.getUserId();\n  //   let userType = this.authService.getUserType();\n  // }\n\n\n  getCollectorMaterial(id: string){\n      return this.http\n      .post(\n        'http://localhost:3000/api/material/getCollectors',\n        {materialId: id}\n      )\n      .subscribe( result => {\n        console.log('materialId :'+ id + 'requsted!' + 'List of CollectorMaterial returned' );\n      });\n   }\n\n\n\n\n}\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { AuthService } from '../auth.service';\n\n@Component({\n  selector: 'app-auth-login',\n  templateUrl: './auth-login.component.html',\n  styleUrls: ['./auth-login.component.css']\n})\nexport class AuthLoginComponent implements OnInit {\n  hide = true;\n  form: FormGroup;\n\n  //var for error message\n  initialError = \"required\"\n  usernameError = this.initialError;\n  passwordError = this.initialError;\n\n  isValid = true;\n  private credentialIsValid: Subscription;\n\n  constructor(private authService: AuthService) { }\n\n\n\n  ngOnInit(): void {\n      this.authService.setCurrentUrl(window.location.pathname);\n    //validators//\n    this.authService.logout();\n\n    this.form = new FormGroup({\n      'username': new FormControl(\"\", {\n        validators: [\n          Validators.required,\n          this.validateAuth.bind(this)\n        ]\n      }),\n\n      'password': new FormControl(\"\", {\n        validators: [\n          Validators.required,\n          this.validateAuth.bind(this)\n        ]\n      })\n    });\n  }\n\n\n\n\n  onLogin() {\n    //if (this.form.invalid){ return; }\n\n    this.isValid = false;\n    let username = this.form.get('username').value;\n    let password = this.form.get('password').value;\n\n\n\n    this.authService.checkCredentialValidity(username, password);\n    this.authService.authStatusListener.subscribe(\n      response => {\n        console.log(\"RESPONSE: \" + response);\n        if (response) {\n          this.isValid = true;\n          this.validateLoginField();\n        }\n        else {\n          this.validateLoginField();\n        }\n      }\n    )\n    //this.validateLoginField();\n    console.log(\"this is after return\");\n    return;\n  }\n\nvalidateAuth(control: FormControl): ValidationErrors {\n  if(this.isValid){\n    return null;\n  }\n  console.log(control.value);\n  return {invalid: true};\n}\n\n\n\n  //custom validation response\n  validateInput(input: string){\n    switch (input) {\n      case 'username' :\n        if(this.form.get('username').hasError('required')) {\n          this.usernameError  = \"required\";\n        }\n        break;\n\n      case 'password' :\n        if(this.form.get('password').hasError('required')) {\n          this.passwordError = \"required\";\n        }\n        break;\n    }\n  }\n\n  validateLoginField(){\n    this.form.controls['username'].updateValueAndValidity();\n    this.form.controls['password'].updateValueAndValidity();\n    if(this.form.get('username').hasError('invalid')) {\n      this.usernameError  = \"invalid username or password\";\n    }\n    if(this.form.get('password').hasError('invalid')) {\n      this.passwordError = \"invalid username or password\";\n    }\n  }\n\n\n\n\n\n  //only required in login page\n  validatePassword(control: FormControl): ValidationErrors {\n    return null;\n    return {\n      notMatch: 'short short'\n    };\n  }\n\n}\n","<main>\n\n\n<mat-toolbar>\n    <span class=\"center_space\"><i class=\"fas fa-recycle\"></i> ESWEB</span>\n  </mat-toolbar>\n<div class=\"container-fluid\">\n\n  <div class=\"form-title text-center\">\n    Login\n  </div>\n<mat-card class=\"bg-light\">\n  <mat-spinner *ngIf=\"\"></mat-spinner>\n\n  <form [formGroup]=\"form\" (submit)=\"onLogin()\"  *ngIf=\"true\">\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Username</mat-label>\n      <input\n        name=\"username\"\n        matInput\n        type=\"text\"\n        placeholder=\"Username\"\n        formControlName=\"username\"\n        (ngModelChange)=\"validateInput('username')\"\n        required\n        >\n        <mat-error *ngIf=\"form.get('username').invalid\">{{ usernameError }}</mat-error>\n    </mat-form-field>\n\n\n\n    <mat-form-field appearance=\"outline\">\n      <mat-label>Password</mat-label>\n      <input\n        name=\"password\"\n        matInput\n        [type]=\"hide ? 'password' : 'text'\"\n        placeholder=\"Password\"\n        formControlName=\"password\"\n        (ngModelChange)=\"validateInput('password')\"\n        required\n        >\n        <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n          <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n        </button>\n        <mat-error *ngIf=\"form.get('password').invalid\">{{ passwordError }}</mat-error>\n    </mat-form-field>\n    <button class=\"btn_color\" mat-raised-button color=\"accent\" type=\"submit\" >Login</button>\n  </form>\n  <div class=\"option\">Don't have an account? <a routerLink=\"/auth/signup\">Sign Up here</a></div>\n</mat-card>\n</div>\n</main>\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth.service';\nimport { ScheduleData } from '../schedule-data.model';\nimport { UserData } from '../user-data.model';\n\n@Component({\n  selector: 'app-auth-schedule',\n  templateUrl: './auth-schedule.component.html',\n  styleUrls: ['./auth-schedule.component.css']\n})\nexport class AuthScheduleComponent implements OnInit {\n  week:ScheduleData[]=[];\n\n  //editable = false;\n  tableLoadLiao = false;\n  timePicker;\n  timeTable;\n  timeIsValid = true;\n  result:ScheduleData[]=[];\n  table;\n  tempCollector: UserData;\n  errorMessage = \"\";\n  timeError = \"[invalid time]: time end must be after time start\";\n  validationList : boolean[];\n  errorList : string[];\n  //techno;\n  constructor(private authService: AuthService) {\n  }\n\n  ngOnInit(): void {\n      this.authService.setCurrentUrl(window.location.pathname);\n    //this.editable = false;\n    this.timePicker = `<form><input matInput class=\"timePicker\" type=\"time\" name=\"\" value=\"\"></form>`;\n    this.timeTable = document.getElementById('timeTable');\n\n    let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n    for(var i=0;i<7;i++){\n        this.week.push({day:weekDay[i],startTime: 'edit', endTime:\"edit\"});\n    }\n    console.log('this also ran');\n\n    this.tempCollector = this.authService.getTempCol();\n  }\n\n\n  tableLoaded (table: any) {\n    if (!this.tableLoadLiao) {\n      let table1 = table;\n      let week1 = [];\n      let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      for(var i=0;i<7;i++){\n          week1.push({day:weekDay[i],startTime: 'edit', endTime:\"edit\"});\n      }\n      this.result =[];\n      for ( let row of table1.getElementsByTagName(\"tbody\")[0].getElementsByTagName('tr')){\n        let day = row.getElementsByTagName(\"td\")[0].innerHTML;\n        let startTime = row.getElementsByTagName(\"td\")[1].innerHTML;\n        let endTime = row.getElementsByTagName(\"td\")[2].innerHTML;\n\n        this.result.push({\n          day:row.getElementsByTagName(\"td\")[0].innerHTML,\n          startTime:row.getElementsByTagName(\"td\")[1].innerHTML,\n          endTime:row.getElementsByTagName(\"td\")[2].innerHTML\n        });\n      }\n    }\n    this.tableLoadLiao = true;\n\n      return null;\n  }\n\n\n  onClick(selectedCell: any){\n    let table     = selectedCell.parentElement;\n    let col2      = table.getElementsByTagName(\"td\")[1];\n    let col3      = table.getElementsByTagName(\"td\")[2];\n\n    let startTime = col2.innerHTML;\n    let endTime   = col3.innerHTML;\n\n    if (selectedCell.getAttribute('editing') == \"false\") {\n      let cellValue = selectedCell.innerHTML;\n      selectedCell.innerHTML = this.timePicker;\n      selectedCell.getElementsByClassName(\"timePicker\")[0].value = cellValue;\n\n      selectedCell.getElementsByClassName(\"timePicker\")[0].focus();\n      selectedCell.setAttribute('editing', \"true\");\n      //console.log('after editing' + selectedCell.getAttribute('editing'));\n\n      let data;\n      selectedCell.getElementsByClassName(\"timePicker\")[0].addEventListener(\"blur\", ()=>{\n        data = selectedCell.getElementsByClassName(\"timePicker\")[0].value;\n        if(data){\n          selectedCell.innerHTML = data;\n        } else {\n          selectedCell.innerHTML = 'edit';\n        }\n        selectedCell.setAttribute('editing', \"false\");\n\n\n\n        //add cell validation here\n        this.validationList = [];\n        this.errorList = [];\n        let validationTable = table.parentElement.parentElement.getElementsByTagName('tr');\n        for( var i=1; i<=7; i++){\n          let col1      = validationTable[i].getElementsByTagName(\"td\")[0];\n          let col2      = validationTable[i].getElementsByTagName(\"td\")[1];\n          let col3      = validationTable[i].getElementsByTagName(\"td\")[2];\n          let isValid;\n          let error;\n          startTime = col2.innerHTML;\n          endTime   = col3.innerHTML;\n          if (startTime=='edit'&&endTime!='edit') {\n            col2.setAttribute('class', 'haveError');\n            isValid = false;\n            error = \"start time undefined for \" + col1.innerHTML;\n          }\n          if (startTime!='edit'&&endTime=='edit') {\n            col3.setAttribute('class', 'haveError');\n            isValid = false;\n            error = \"end time undefined for \" + col1.innerHTML;\n          }\n          if ((startTime=='edit'&&endTime=='edit') || (startTime!='edit'&&endTime!='edit')) {\n            col2.setAttribute('class', ' ');\n            col3.setAttribute('class', ' ');\n            isValid = true;\n            error = \"\";\n\n            if(startTime > endTime) {\n              console.log('time range false | startTime:' + startTime + ' endTime:' + endTime);\n              col2.setAttribute('class', 'haveError');\n              col3.setAttribute('class', 'haveError');\n              isValid = false;\n              error = this.timeError;\n            }\n            if(startTime < endTime) {\n              console.log('time range true  | startTime:' + startTime + ' endTime:' + endTime);\n              col2.setAttribute('class', ' ');\n              col3.setAttribute('class', ' ');\n              isValid = true;\n              error = \"\";\n            }\n          }\n          this.errorList.push(error);\n          this.validationList.push(isValid);\n        }\n\n\n        this.errorMessage = \"\";\n        for(var error of this.errorList){\n          if(error != \"\" && error != null){\n            this.errorMessage = error;\n          }\n        }\n        this.timeIsValid = true;\n        for(var valid of this.validationList) {\n          if(!valid){\n            this.timeIsValid = false;\n          }\n        }\n\n        if(selectedCell.innerHTML == 'edit'){\n          selectedCell.setAttribute('edited', 'false');\n        } else {\n          selectedCell.setAttribute('edited', 'true');\n        }\n\n\n\n        //update table array\n        this.result =[];\n        for ( let row of table.parentElement.getElementsByTagName(\"tr\")){\n          let day = row.getElementsByTagName(\"td\")[0].innerHTML;\n          let startTime = row.getElementsByTagName(\"td\")[1].innerHTML;\n          let endTime = row.getElementsByTagName(\"td\")[2].innerHTML;\n\n          this.result.push({\n            day:row.getElementsByTagName(\"td\")[0].innerHTML,\n            startTime:row.getElementsByTagName(\"td\")[1].innerHTML,\n            endTime:row.getElementsByTagName(\"td\")[2].innerHTML\n          });\n        }\n\n\n      });\n    }\n  }\n\n  confirmCreation(){\n    if (this.timeIsValid) {\n      let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      for(var i=0;i<7;i++){\n        if(this.result[i].day==\"\" ) {this.result[i].day = weekDay[i];}\n        if(this.result[i].startTime==\"edit\" || this.result[i].startTime==\"\"){this.result[i].startTime=null;}\n        if(this.result[i].endTime==\"edit\" || this.result[i].endTime==\"\"){this.result[i].endTime=null;}\n      }\n\n      let userData      = this.tempCollector;\n      let scheduleData  = this.result;\n      this.authService.createColPart2(userData, scheduleData);\n    }\n\n\n\n\n    //alert('confirm: ' + JSON.stringify(this.result));\n    //go to service\n\n  }\n\n\n  abortMission(){\n    //this.authService.cancelCollectorSignup();\n\n  }\n\n\n\n\n\n\n}\n/*\nonClick(selectedCell: any){\n  console.log(selectedCell.parentElement.getElementsByClassName(\"myCol\")[0].innerHTML);\n  let table     = selectedCell.parentElement;\n  let col1      = table.getElementsByClassName(\"myCol\")[0];\n  let col2      = table.getElementsByClassName(\"myCol\")[1];\n  let col3      = table.getElementsByClassName(\"myCol\")[2];\n  let col4      = table.getElementsByClassName(\"myCol\")[3];\n  let day       = col1.innerHTML;\n  let startTime = col2.innerHTML;\n  let endTime   = col3.innerHTML;\n  let action    = col4.innerHTML;\n\n  if(action == 'save') {\n    //startTime   = col2.getElementsByClassName('timePicker')[0].value;\n    //endTime     = col3.getElementsByClassName('timePicker')[0].value;\n    col4.innerHTML = 'edit';\n    col2.innerHTML = col2.getElementsByClassName('timePicker')[0].value;\n    col3.innerHTML = col3.getElementsByClassName('timePicker')[0].value;\n\n  }\n  else {\n    startTime      = col2.innerHTML;\n    endTime        = col3.innerHTML;\n\n\n    col2.innerHTML = this.timePicker;\n    col3.innerHTML = this.timePicker;\n    col2.getElementsByClassName('timePicker')[0].value = startTime;\n    col3.getElementsByClassName('timePicker')[0].value = endTime;\n    col4.innerHTML = 'save';\n  }\n}*/\n","<mat-toolbar>\n  <span class=\"center_space\"><i class=\"fas fa-recycle\"></i> ESWEB</span>\n</mat-toolbar>\n\n\n<div class=\"container-fluid\">\n  <div class=\"table-con\">\n    <h1 class=\"text-center myTitle\">Collector Schedule</h1>\n    <div class=\"text-center myDesc\">please select time</div>\n    <mat-card>\n      <mat-card-content>\n        <table #timeTable class=\"table\">\n\n            <tr>\n              <th></th>\n              <th>start time</th>\n              <th>end time</th>\n            </tr>\n\n          <tbody>\n            <tr *ngFor=\"let day of week\">\n              <td class=\"myCol\">{{ day.day }}</td>\n              <td class=\"myCol\" #col2 (click)=\"onClick(col2)\" editing=\"false\" edited=\"false\">{{ day.startTime }}</td>\n              <td class=\"myCol\" #col3 (click)=\"onClick(col3)\" editing=\"false\" edited=\"false\">{{ day.endTime }}</td>\n            </tr>\n          </tbody>\n        </table>\n      </mat-card-content>\n    </mat-card>\n    <div class=\"haveError tableError text-center\">{{ errorMessage }}</div>\n    <div class=\"button-group\">\n      <button mat-raised-button color=\"primary\" (click)=\"confirmCreation()\">PROCEED</button>\n      <a href=\"\" class=\"\"  routerLink=\"/auth/signup\">back</a>\n    </div>\n  </div>\n  {{ tableLoaded(timeTable) }}\n</div>\n\n\n\n<!--\n\n<mat-card-actions>\n  <button mat-button>back</button>\n  <button mat-button (click)=\"confirmCreation()\">PROCEED</button>\n</mat-card-actions>\n\n\n<mat-toolbar>\n  <span class=\"center_space\"><i class=\"fas fa-recycle\"></i> ESWEB</span>\n</mat-toolbar>\n\n\n<table id=\"timeTable\">\n  <thead>\n    <tr>\n      <th>day</th>\n      <th>start time</th>\n      <th>end time</th>\n      <th>action</th>\n    </tr>\n  </thead>\n\n  <tbody>\n    <tr *ngFor=\"let day of week\">\n      <td class=\"myCol\">{{ day.day }}</td>\n      <td class=\"myCol\">{{ day.startTime }}</td>\n      <td class=\"myCol\">{{ day.endTime }}</td>\n      <td class=\"myCol\" #self (click)=\"onClick(self)\">edit</td>\n    </tr>\n  </tbody>\n\n</table>\n\n\n  -->\n\n\n\n\n\n<!--\n/*\nonClick(selectedCell: any){\n  console.log(selectedCell.parentElement.getElementsByClassName(\"myCol\")[0].innerHTML);\n  let table     = selectedCell.parentElement;\n  let col1      = table.getElementsByClassName(\"myCol\")[0];\n  let col2      = table.getElementsByClassName(\"myCol\")[1];\n  let col3      = table.getElementsByClassName(\"myCol\")[2];\n  let col4      = table.getElementsByClassName(\"myCol\")[3];\n  let day       = col1.innerHTML;\n  let startTime = col2.innerHTML;\n  let endTime   = col3.innerHTML;\n  let action    = col4.innerHTML;\n\n  if(action == 'save') {\n    //startTime   = col2.getElementsByClassName('timePicker')[0].value;\n    //endTime     = col3.getElementsByClassName('timePicker')[0].value;\n    col4.innerHTML = 'edit';\n    col2.innerHTML = col2.getElementsByClassName('timePicker')[0].value;\n    col3.innerHTML = col3.getElementsByClassName('timePicker')[0].value;\n\n  }\n  else {\n    startTime      = col2.innerHTML;\n    endTime        = col3.innerHTML;\n\n\n    col2.innerHTML = this.timePicker;\n    col3.innerHTML = this.timePicker;\n    col2.getElementsByClassName('timePicker')[0].value = startTime;\n    col3.getElementsByClassName('timePicker')[0].value = endTime;\n    col4.innerHTML = 'save';\n  }\n}*/\n\n  -->\n","import { Component, OnInit } from '@angular/core';\nimport { NgForm, FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { MatTabChangeEvent } from '@angular/material/tabs';\nimport { AuthService } from '../auth.service';\nimport { Subscription } from 'rxjs';\n\n@Component({\n  selector: 'app-auth-signup',\n  templateUrl: './auth-signup.component.html',\n  styleUrls: ['./auth-signup.component.css']\n})\nexport class AuthSignupComponent implements OnInit {\n  hide = true;\n  form_recycler: FormGroup;\n  form_collector: FormGroup;\n  start1;\n  result;\n  isUnique = true;\n  selectedIndex = \"0\";\n\n  //var for error message\n  initialError = 'required';\n  recycler_usernameError  = this.initialError;\n  recycler_passwordError  = this.initialError;\n  recycler_fullNameError  = this.initialError;\n  recycler_addressError   = this.initialError;\n  recycler_scheduleError  = this.initialError;\n  collector_usernameError  = this.initialError;\n  collector_passwordError  = this.initialError;\n  collector_fullNameError  = this.initialError;\n  collector_addressError   = this.initialError;\n  collector_scheduleError  = this.initialError;\n\n\n  usernameInput = '';\n\n  private mode = 'recycler';\n\n  private uniqueUsernameListener: Subscription;\n\n  constructor(private router: Router, public authService: AuthService) { }\n\n\n\n  ngOnInit(): void {\n    this.authService.setCurrentUrl(window.location.pathname);\n    //validators//\n    this.authService.logout();\n    this.setFormGroup();\n    //this.selectedIndex = \"1\";\n    //check if existing col signup\n    this.initialiseCol();\n  }\n\n  initialiseCol() {\n    if(this.authService.getTempCol()){\n      let theCol = this.authService.getTempCol();\n      this.selectedIndex = \"1\";\n      this.form_collector.get('username').setValue(theCol.username);\n      this.form_collector.get('password').setValue(theCol.password);\n      this.form_collector.get('fullName').setValue(theCol.fullName);\n      this.form_collector.get('address').setValue(theCol.address);\n    }\n  }\n\n  xd1() {\n    let username = this.form_recycler.get('username').value;\n    if(username != null && username.length > 0){\n      this.uniqueUsernameListener = this.authService.getuniqueUsernameListener().subscribe(\n        (result) => {\n          this.isUnique = result;\n          if(!result){\n            this.recycler_usernameError  = \"username is taken\";\n          }\n          this.form_recycler.controls['username'].updateValueAndValidity();\n          console.log(\"is unique: \" + result);\n          //this.recycler_usernameError  = \"username is taken\";\n        }\n      );\n      this.authService.checkUserExist(username);\n    }\n  }\n\n  xd2() {\n    let username = this.form_collector.get('username').value;\n    if(username != null && username.length > 0){\n      this.uniqueUsernameListener = this.authService.getuniqueUsernameListener().subscribe(\n        (result) => {\n          this.isUnique = result;\n          if(!result){\n            this.collector_usernameError  = \"username is taken\";\n          }\n          this.form_collector.controls['username'].updateValueAndValidity();\n          //this.collector_usernameError  = \"username is taken\";\n        }\n      );\n      this.authService.checkUserExist(username);\n    }\n  }\n\n\n  onCollectorSignup() {\n    if (this.form_collector.invalid) {\n      return;\n    }\n\n    let username  = this.form_collector.get('username').value;\n    let password  = this.form_collector.get('password').value;\n    let fullName  = this.form_collector.get('fullName').value;\n    let address   = this.form_collector.get('address').value;\n    let schedule  = null;\n    let userType  = \"collector\";\n\n\n    this.authService.createColPart1(username, password, fullName, address, schedule, userType);\n    //this.form_collector.reset();\n  }\n\n  onRecyclerSignup() {\n    if (this.form_recycler.invalid) {\n      return;\n    }\n\n    let username  = this.form_recycler.get('username').value;\n    let password  = this.form_recycler.get('password').value;\n    let fullName  = this.form_recycler.get('fullName').value;\n    let address   = null;\n    let schedule  = null;\n    let userType  = \"recycler\";\n\n\n    this.authService.createUser(username, password, fullName, address, schedule, userType);\n    //this.form_recycler.reset();\n  }\n\n\n\n  setFormGroup() {\n\n      this.form_recycler = new FormGroup({\n        'username': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.minLength(7),\n            Validators.maxLength(20),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n            this.validateUnique.bind(this)\n          ]\n        }),\n\n        'password': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.minLength(7)\n          ]\n        }),\n\n        'fullName': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.maxLength(100)\n          ]\n        }),\n\n        'address': new FormControl(\"\", {}),\n      });\n\n\n\n      this.form_collector = new FormGroup({\n        'username': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.minLength(7),\n            Validators.maxLength(20),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n            this.validateUnique.bind(this)\n          ]\n        }),\n\n        'password': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.minLength(7)\n          ]\n        }),\n\n        'fullName': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.maxLength(100)\n          ]\n        }),\n\n        'address': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.maxLength(300)\n          ]\n        }),\n      });\n  }\n\n  tabChanged(tabChangeEvent: MatTabChangeEvent): void {\n    this.setFormGroup();\n    this.form_recycler.reset();\n    this.form_collector.reset();\n    this.authService.removeTempCol();\n  }\n\n  //custom validation response\n  validateCollectorInput(input: string){\n    this.xd2();\n    switch (input) {\n      case 'collector_username' :\n        if(this.form_collector.get('username').hasError('required')) {\n          this.collector_usernameError  = \"required\";\n        }\n        if (this.form_collector.get('username').hasError('minlength')) {\n          this.collector_usernameError  = \"minimum 7 characters\";\n        }\n        if (this.form_collector.get('username').hasError('maxlength')) {\n          this.collector_usernameError  = \"maximum 20 charecters\";\n        }\n        if (this.form_collector.get('username').hasError('pattern')) {\n          this.collector_usernameError  = \"illegal symbol: number and alphabet only\";\n        }\n        if (this.form_collector.get('username').hasError('unique')) {\n          this.collector_usernameError  = \"username is taken\";\n        }\n        break;\n\n      case 'collector_password' :\n        if(this.form_collector.get('password').hasError('required')) {\n          this.collector_passwordError = \"required\";\n        }\n        if (this.form_collector.get('password').hasError('minlength')) {\n          this.collector_passwordError = \"minimum 7 characters\";\n        }\n        if (this.form_collector.get('password').hasError('notMatch')) {\n          this.collector_passwordError = \"wrong password\";\n        }\n        break;\n\n      case 'collector_fullName' :\n        if(this.form_collector.get('fullName').hasError('required')) {\n          this.collector_fullNameError  = \"required\";\n        }\n        if (this.form_collector.get('fullName').hasError('maxlength')) {\n          this.collector_fullNameError  = \"maximum 100 charecters\";\n        }\n        break;\n\n      case 'collector_address' :\n        if(this.form_collector.get('address').hasError('required')) {\n          this.collector_addressError  = \"required\";\n        }\n        if (this.form_collector.get('address').hasError('maxlength')) {\n          this.collector_addressError  = \"maximum 300 charecters\";\n        }\n        break;\n    }\n  }\n\n  validateRecyclerInput(input: string){\n    this.xd1();\n    switch (input) {\n      case 'recycler_username' :\n        if(this.form_recycler.get('username').hasError('required')) {\n          this.recycler_usernameError  = \"required\";\n        }\n        if (this.form_recycler.get('username').hasError('minlength')) {\n          this.recycler_usernameError  = \"minimum 7 characters\";\n        }\n        if (this.form_recycler.get('username').hasError('maxlength')) {\n          this.recycler_usernameError  = \"maximum 20 charecters\";\n        }\n        if (this.form_recycler.get('username').hasError('pattern')) {\n          this.recycler_usernameError  = \"illegal symbol: number and alphabet only\";\n        }\n        if (this.form_recycler.get('username').hasError('unique')) {\n          this.recycler_usernameError  = \"username is taken\";\n        }\n        break;\n\n      case 'recycler_password' :\n        if(this.form_recycler.get('password').hasError('required')) {\n          this.recycler_passwordError = \"required\";\n        }\n        if (this.form_recycler.get('password').hasError('minlength')) {\n          this.recycler_passwordError = \"minimum 7 characters\";\n        }\n        if (this.form_recycler.get('password').hasError('notMatch')) {\n          this.recycler_passwordError = \"wrong password\";\n        }\n        break;\n\n      case 'recycler_fullName' :\n        if(this.form_recycler.get('fullName').hasError('required')) {\n          this.recycler_fullNameError  = \"required\";\n        }\n        if (this.form_recycler.get('fullName').hasError('maxlength')) {\n          this.recycler_fullNameError  = \"maximum 100 charecters\";\n        }\n        break;\n    }\n  }\n\n\n\n\n\n  //custom validation template\n  validateUnique(control: FormControl): ValidationErrors {\n    if(this.isUnique == false){\n      return {unique: 'not'};\n    }\n    return null;\n  }\n\n\n  //only required in login page\n  validatePassword(control: FormControl): ValidationErrors {\n    return null;\n    return {\n      notMatch: 'short short'\n    };\n  }\n}\n","\n<mat-toolbar>\n  <span class=\"center_space\"><i class=\"fas fa-recycle\"></i> ESWEB</span>\n</mat-toolbar>\n\n<div class=\"container-fluid\" >\n  <div class=\"form-title text-center\">Sign Up</div>\n\n<mat-tab-group (selectedTabChange)=\"tabChanged($event)\" [(selectedIndex)]=\"selectedIndex\">\n\n  <mat-tab label=\"Recycler\">\n\n\n    <mat-card>\n      <mat-card-content>\n\n      <form [formGroup]=\"form_recycler\" (submit)=\"onRecyclerSignup()\"  *ngIf=\"true\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Username</mat-label>\n          <input\n            name=\"username\"\n            matInput\n            type=\"text\"\n            formControlName=\"username\"\n            (ngModelChange)=\"validateRecyclerInput('recycler_username')\"\n            required\n            >\n            <mat-error *ngIf=\"form_recycler.get('username').invalid\">{{ recycler_usernameError  }}</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input\n            name=\"password\"\n            matInput\n\n            [type]=\"hide ? 'password' : 'text'\"\n            formControlName=\"password\"\n            (ngModelChange)=\"validateRecyclerInput('recycler_password')\"\n            required\n            >\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"form_recycler.get('password').invalid\">{{ recycler_passwordError }}</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Full Name</mat-label>\n          <input\n            name=\"fullName\"\n            matInput\n            type=\"text\"\n\n            formControlName=\"fullName\"\n            (ngModelChange)=\"validateRecyclerInput('recycler_fullName')\"\n            required\n            >\n            <mat-error *ngIf=\"form_recycler.get('fullName').invalid\">{{ recycler_fullNameError }}</mat-error>\n        </mat-form-field>\n\n\n\n\n        <button class=\"btn_color\" mat-raised-button color=\"primary\" type=\"submit\" >Sign Up</button>\n      </form>\n      <div class=\"option\">Alraedy have an account? <a routerLink=\"/auth/login\">Login here</a></div>\n    </mat-card-content>\n    </mat-card>\n    <div class=\"spacer\">\n\n    </div>\n  </mat-tab>\n\n\n\n  <mat-tab label=\"Collector\">\n    <mat-card>\n      <form [formGroup]=\"form_collector\" (submit)=\"onCollectorSignup()\"  *ngIf=\"true\">\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Username</mat-label>\n          <input\n            name=\"username\"\n            matInput\n            type=\"text\"\n            formControlName=\"username\"\n            (ngModelChange)=\"validateCollectorInput('collector_username')\"\n            required\n            >\n            <mat-error *ngIf=\"form_collector.get('username').invalid\">{{ collector_usernameError  }}</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Password</mat-label>\n          <input\n            name=\"password\"\n            matInput\n            \n            formControlName=\"password\"\n            (ngModelChange)=\"validateCollectorInput('collector_password')\"\n            required\n            [type]=\"hide ? 'password' : 'text'\"\n            >\n            <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n              <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n            </button>\n            <mat-error *ngIf=\"form_collector.get('password').invalid\">{{ collector_passwordError }}</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Full Name</mat-label>\n          <input\n            name=\"fullName\"\n            matInput\n            type=\"text\"\n            formControlName=\"fullName\"\n            (ngModelChange)=\"validateCollectorInput('collector_fullName')\"\n            required\n            >\n            <mat-error *ngIf=\"form_collector.get('fullName').invalid\">{{ collector_fullNameError }}</mat-error>\n        </mat-form-field>\n\n        <mat-form-field appearance=\"outline\">\n          <mat-label>Address</mat-label>\n          <textarea rows=\"1\" cols=\"80\"\n            name=\"address\"\n            matInput\n            type=\"text\"\n            formControlName=\"address\"\n            (ngModelChange)=\"validateCollectorInput('collector_address')\"\n            required\n            ></textarea>\n            <mat-error *ngIf=\"form_collector.get('address').invalid\">{{ collector_addressError }}</mat-error>\n        </mat-form-field>\n\n\n\n        <button mat-raised-button color=\"primary\" type=\"submit\" >Sign Up</button>\n      </form>\n      <div class=\"option\">Alraedy have an account? <a routerLink=\"/auth/login\">Login here</a></div>\n    </mat-card>\n    <div class=\"spacer2\">\n\n    </div>\n  </mat-tab>\n</mat-tab-group>\n</div>\n","import { Injectable } from '@angular/core';\nimport { CanActivate, ActivatedRouteSnapshot, RouterStateSnapshot, UrlTree, Router } from '@angular/router';\nimport { Observable } from 'rxjs';\nimport { AuthService } from './auth.service';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthGuard implements CanActivate {\n  constructor(private authService: AuthService, private router: Router){\n\n  }\n  canActivate(\n    next: ActivatedRouteSnapshot,\n    state: RouterStateSnapshot): Observable<boolean | UrlTree> | Promise<boolean | UrlTree> | boolean | UrlTree {\n\n      const prev = this.authService.getPrevUrl();\n      const curr = this.authService.getCurrentUrl();\n      const isAuth = this.authService.getIsAuth();\n      const userType = this.authService.getUserType();\n      const targetUrl = next.url;\n      //const currentUrl = state.url;\n\n      console.log(\"[route-guard] is Auth  :\" + isAuth);\n      console.log(\"[route-guard] switch on:\" + state.url);\n\n      //let accessible = false;\n      switch (targetUrl.toString()) {\n        case 'history':\n          if ( isAuth ) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'make-appointment':\n          if ( isAuth && userType == 'recycler' ) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'record-submission':\n          if ( isAuth && userType != 'admin' ) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'add-submission':\n          if ( isAuth && userType == 'collector' ) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'dashboard-user':\n          if (userType == 'recycler' && isAuth) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'dashboard-collector':\n          if (userType == 'collector' && isAuth) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'dashboard-admin':\n          if (userType == 'admin' && isAuth) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n\n        case 'admin,manage-material':\n\n          if (userType == 'admin' && isAuth) {\n            return true;\n          }\n          this.router.navigate([curr]);\n          return false;\n          break;\n\n        case 'auth,login':\n          //let currentUrl = state.url\n\n          if(isAuth){\n            if(curr == '/home') {\n              if (userType == 'collector') {\n                this.router.navigate(['/dashboard-collector']);\n              }\n              else if(userType == 'recycler') {\n                this.router.navigate(['/dashboard-user']);\n              }\n              else if(userType == 'admin') {\n                this.router.navigate(['/dashboard-admin']);\n              }\n              return false;\n            }\n\n            if(confirm(\"Do you want to log out?\")){\n              this.authService.logout();\n              return true;\n            } else {\n              this.router.navigate([curr]);\n              return false;\n            }\n          }\n          return true;\n          break;\n\n\n        case 'auth,signup':\n          //let currentUrl = state.url\n          if(isAuth){\n            if(curr == '/home') {\n              if (userType == 'collector') {\n                this.router.navigate(['/dashboard-collector']);\n              }\n              else if(userType == 'recycler') {\n                this.router.navigate(['/dashboard-user']);\n              }\n              else if(userType == 'admin') {\n                this.router.navigate(['/dashboard-admin']);\n              }\n              return false;\n            }\n\n            if(confirm(\"Do you want to log out?\")){\n              return true;\n            } else {\n              this.router.navigate([prev]);\n              return false;\n            }\n          }\n          return true;\n          break;\n\n\n        case 'manage-profile':\n          //let currentUrl = state.url\n          if(isAuth){\n            return true;\n          } else {\n            this.router.navigate([prev]);\n            return false;\n          }\n\n          return true;\n          break;\n\n\n        case 'auth,schedule':\n          if(this.authService.getTempCol()){\n            return true;\n          } else {\n              this.router.navigate([prev]);\n              return false;\n          }\n          return false;\n          break;\n      }\n      return false;\n\n\n//add auth guard for login and signup...\n/*\n      if (accessible) {\n        return accessible;\n      }\n\n      this.router.navigate(['/auth/login']);\n      return false;\n*/\n      //console.log(\"[route-guard] is Auth  :\" + isAuth);\n      //console.log(\"[route-guard] not-Auth : auth guard is applied but haven't been set up, please set up the guard criteria\");\n      //return false;\n      //console.log(\"[route-guard] end:\" + next.url);\n      //this.router.navigate(['/auth/login']);\n      //return false;\n\n      //console.log(\"[route-guard] switch on:\" + targetUrl);\n      //console.log(\"[route-guard] user type:\" + userType);\n      //console.log(\"[route-guard] is Auth  :\" + isAuth);\n  }\n\n}\n","import { Injectable, OnInit } from '@angular/core';\nimport { ScheduleData } from './schedule-data.model';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { UserData } from './user-data.model';\nimport { map } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthService implements OnInit{\n  uniqueUsernameListener = new Subject<boolean>();\n  authStatusListener = new Subject<boolean>();\n  collectorMaterialListener = new Subject<any>();\n  MaterialUpdatedListener = new Subject<boolean>();\n  recyclerExistListener = new Subject<any>();\n  pointsUpdatedLisetener = new Subject<any>();\n  isValid = false;\n\n\n  private username: string;\n  private fullName: string;\n  private token: string;\n  private tokenTimer: any;\n  private userId: string;\n  private userType: string;\n\n  private tempCollectorSignupDetail: UserData;\n\n  ngOnInit(): void {}\n\n  constructor(private http: HttpClient, private router: Router) { }\n\n  getuniqueUsernameListener() {\n    return this.uniqueUsernameListener.asObservable();\n  }\n  getauthStatusListener() {\n    return this.authStatusListener.asObservable();\n  }\n  getIsAuth(){\n    return this.getAuthData() != null;\n  }\n  getUserType(){\n    if (this.getIsAuth()) {\n        return this.getAuthData().userType;\n    }\n    return null;\n  }\n  getTempCol() {\n    return this.getCollector();\n  }\n  removeTempCol() {\n    localStorage.removeItem('tempCol');\n  }\n  getUserId() {\n    if ( this.getIsAuth() ) {\n      return this.getAuthData().userId;\n    }\n    return null;\n  }\n  getUsername() {\n    if ( this.getIsAuth() ) {\n      return this.getAuthData().username;\n    }\n    return null;\n  }\n  getFullName() {\n    if ( this.getIsAuth() ) {\n      return this.getAuthData().fullName;\n    }\n    return null;\n  }\n  getCollectorMaterialUpdatedListener(){\n    return this.collectorMaterialListener.asObservable();\n  }\n\n\n  getPoints() {\n    this.http.post<{totalPoints: number, ecoLevel: string}>(\n      \"http://localhost:3000/api/user/getUser\",\n      {_id: this.getUserId()}\n    )\n    .subscribe( result => {\n      this.pointsUpdatedLisetener.next(result);\n    });\n  }\n  getPointsUpdatedListener() {\n    return this.pointsUpdatedLisetener.asObservable();\n  }\n\n\n  getRecyclerExistListener() {\n    return this.recyclerExistListener.asObservable();\n  }\n  checkRecyclerExist(username){\n    this.http.post<any>(\n      \"http://localhost:3000/api/user/findUser\",\n      { username: username})\n      .subscribe( result => {\n        //console.log(result[0]);\n        if( result.length>0 && result[0].userType == 'recycler' ) {\n            this.recyclerExistListener.next(result[0]);\n            console.log('recycler found: ' + result[0]);\n        }\n      });\n  }\n\n\n  getRecyclers() {\n    return this.http.post<any>(\"http://localhost:3000/api/user/getRecyclers\", {});\n  }\n\n\n\n  getCollectorMaterials() {\n    //console.log(\"get material\");\n    let userID = this.getUserId();\n    //console.log(\"uid\" + userID);\n    this.http\n      .post<{materials:any}>( 'http://localhost:3000/api/user/getCollectorMaterial', { userID: userID } )\n      .subscribe( result => {\n        if ( result ) {\n          //console.log('getMaterial: ');\n          //console.log(result);\n          this.collectorMaterialListener.next(result.materials);\n        }  else {\n          this.collectorMaterialListener.next(false);\n        }\n      });\n    //return this.http.post( 'http://localhost:3000/api/user/getMaterials', userID );\n  }\n\n\n\n\n\n  private userRetrieved = new Subject<{username: string, fullName: string, totalPoints: number, ecoLevel: string, address: string}>();\n  getUserIsRetrieved() {\n    return this.userRetrieved.asObservable();\n  }\n  getUser() {\n    this.http.post<{username: string, fullName: string, totalPoints: number, ecoLevel: string, address: string}>(\"http://localhost:3000/api/user/getUser\", { _id: this.getUserId() }).subscribe(\n      result => {\n        if ( result ) {\n          this.userRetrieved.next(result);\n        } else {\n          this.userRetrieved.next(null);\n        }\n      },\n      error => {\n        this.userRetrieved.next(null);\n      }\n    );\n  }\n\n\n\n  private scheduleRetrieved = new Subject<{day: string, startTime: string, endTime: string}[]>();\n  getScheduleIsRetrieved() {\n    return this.scheduleRetrieved.asObservable();\n  }\n  getSchedule() {\n    this.http.post<{day: string, startTime: string, endTime: string}[]>('http://localhost:3000/api/user/getSchedule', {userId: this.getUserId()})\n    .subscribe( result => {\n      if ( result ) {\n        this.scheduleRetrieved.next(result);\n      } else {\n        this.scheduleRetrieved.next(null);\n      }\n    }\n    , error => {\n      this.scheduleRetrieved.next(null);\n    });\n  }\n\n\n\n  updateProfile(userData: any){\n    //console.log(\"user data      : \" + JSON.stringify(userData));\n    //console.log(\"sched data     : \" + scheduleData);\n    //console.log(\"password null  : \" + (userData.password==null||userData.password==\"\"));\n\n    let passwordChanged = !(userData.password==null||userData.password==\"\");\n    let userId = this.getUserId();\n\n     this.http\n      .post(\n        \"http://localhost:3000/api/user/updateProfile\",\n        { userData, userId }\n      )\n      .subscribe( result => {\n\n        //not defined\n      }, error => {\n        console.log(error);//no defined\n      } );\n  }\n  updateSchedule( scheduleData:any, userId: string ){\n    this.http\n      .post(\n        \"http://localhost:3000/api/user/updateSchedule\",\n        { scheduleData, userId }\n      )\n      .subscribe(\n        result => {\n          //not defined\n        },\n        error => {\n          console.log(error);\n        }\n      );\n  }\n  updateMaterial( materials: any, userId: string ){\n    this.http\n      .post(\n        \"http://localhost:3000/api/user/updateCollectorMaterial\",\n        { materials, userId }\n      )\n      .subscribe(\n        result => {\n          console.log('this ran')\n          this.getCollectorMaterials();\n        },\n        error => {\n\n        }\n      );\n  }\n\n\n\n\n\n\n  createColPart1(username: string, password: string, fullName: string, address: string, schedule: string, userType: string){\n    this.tempCollectorSignupDetail = {\n      username:username,\n      password:password,\n      fullName:fullName,\n      totalPoints:null,\n      ecoLevel: null,\n      address:address,\n      schedule:schedule,\n      userType:userType\n    };\n    this.saveCollector(this.tempCollectorSignupDetail);\n    this.router.navigate(['/auth/schedule']);\n\n  }\n  createColPart2(userData: UserData, scheduleData: ScheduleData[]) {\n    //console.log('part 2 ran');\n    let collectorData = {userData, scheduleData};\n    this.http\n      .post(\"http://localhost:3000/api/user/createCollector\", collectorData)\n      .subscribe( result =>{\n          //console.log('schedule created successfully, id: ' + result);\n          alert(\"Signup Succesfull.\\nRedirecting to login page.\");\n          this.router.navigate(['/auth/login']);\n      }, error => {\n        //console.log('create collector post failed: ' + error.message );\n        alert('Account not created.\\nError occured during user createion.\\nRedirecting to Signup page.');\n        this.router.navigate(['/auth/signup']);\n      });\n    this.removeTempCol();\n    return false;\n  }\n\n  cancelCollectorSignup() {\n    //this.router.navigate([\"/auth/login\"]);\n  }\n  private saveCollector(collector:UserData){\n    localStorage.setItem('tempCol', JSON.stringify(collector));\n  }\n  private clearCollector(){\n    localStorage.removeItem('tempCol')\n  }\n  private getCollector(){\n    return JSON.parse(localStorage.getItem('tempCol')) as UserData;\n  }\n\n\n\n  createUser(username: string, password: string, fullName: string, address: string, schedule: string, userType:string){\n    //console.log('reached auth service');\n    if(userType == \"recycler\"){\n      let userData: UserData = {\n        username: username,\n        password: password,\n        fullName: fullName,\n        totalPoints: null,\n        ecoLevel: null,\n        address: null,\n        schedule: null,\n        userType: userType\n      }\n      this.http\n        .post(\"http://localhost:3000/api/user/signup\", userData)\n        .subscribe(() => {\n          this.router.navigate([\"/auth/login\"]);\n        }, error => {\n          console.log('something about auth status listener: ' + error.message);\n        });\n    }\n\n    else {\n      let userData: UserData = {\n        username: username,\n        password: password,\n        fullName: fullName,\n        totalPoints: null,\n        ecoLevel: null,\n        address: address,\n        schedule: null,\n        userType: userType\n      }\n      this.http\n        .post(\"http://localhost:3000/api/user/signup\", userData)\n        .subscribe(() => {\n          this.router.navigate([\"/auth/login\"]);\n        }, error => {\n          console.log('something about auth status listener: ' + error.message);\n        });\n    }\n  }\n\n\n  private userFound = true;\n  checkUserExist(username: String){\n    this.http.get<{userFound: String}>(\"http://localhost:3000/api/user/checkUserExist/\" + username).subscribe(\n      (result) => {\n        if(result.userFound){\n          this.uniqueUsernameListener.next(false);\n        } else {\n          this.uniqueUsernameListener.next(true);\n        }\n      }\n    )\n  }\n\n\n\n  checkCredentialValidity(username: string, password: string){\n    const credential = {username: username, password: password};\n\n    this.http\n      .post<{token: string, expiresIn: number, username:string, fullName:string, userId: string, userType: string}>(\n        \"http://localhost:3000/api/user/login\", credential\n      )\n      .subscribe(response => {\n        const token = response.token;\n        this.token = token;\n        if (token) {\n          const expiresInDuration = response.expiresIn;\n          this.setAuthTimer(expiresInDuration);\n          console.log(\"expires in: \" + expiresInDuration);\n          this.isValid = true;\n          this.userId = response.userId;\n          this.userType = response.userType;\n          this.username = response.username;\n          this.fullName = response.fullName;\n          this.authStatusListener.next(true);\n          const now = new Date();\n          const expirationDate = new Date(now.getTime() + expiresInDuration * 1000);\n          console.log(\"expired on \" + expirationDate);\n          this.saveAuthData(token, expirationDate, this.username,this.fullName, this.userId, this.userType);\n          //this.router.navigate();\n          if (this.userType == 'recycler') {\n            this.router.navigate(['/dashboard-user']);\n          }\n          else if  (this.userType == 'admin') {\n            this.router.navigate(['/dashboard-admin']);\n          }\n          else {\n            this.router.navigate(['/dashboard-collector']);\n          }\n        }\n      }, error => {\n        this.authStatusListener.next(false);\n      });\n  }\n\n\n  logout(){\n    this.clearAuthData()\n    this.token = null;\n    this.tokenTimer = null;\n    this.userId = null;\n    this.userType = null;\n    this.authStatusListener.next(false);\n  }\n\n\n\n  private setAuthTimer(duration: number){\n    this.tokenTimer = setTimeout(() => {\n      this.logout();\n    }, duration * 1000);\n  }\n  private saveAuthData(token: string, expirationDate: Date, username:string, fullName:string, userId: string, userType: string) {\n    localStorage.setItem('token', token);\n    localStorage.setItem('expiration', expirationDate.toISOString());\n    localStorage.setItem('username', username);\n    localStorage.setItem('fullName', fullName);\n    localStorage.setItem('userId', userId);\n    localStorage.setItem('userType', userType);\n  }\n  private clearAuthData() {\n    localStorage.removeItem('token');\n    localStorage.removeItem('expiration');\n    localStorage.removeItem('username');\n    localStorage.removeItem('fullName');\n    localStorage.removeItem('userId');\n    localStorage.removeItem('userType');\n  }\n  private getAuthData() {\n    const token = localStorage.getItem(\"token\");\n    const expirationDate = localStorage.getItem('expiration');\n    const username = localStorage.getItem('username');\n    const fullName = localStorage.getItem('fullName');\n    const userId = localStorage.getItem('userId');\n    const userType = localStorage.getItem('userType');\n\n\n    if (!token || !expirationDate) {\n      return;\n    }\n    return {\n      token: token,\n      expirationDate: new Date(expirationDate),\n      username: username,\n      fullName: fullName,\n      userId: userId,\n      userType: userType\n    }\n  }\n\n  findUser(username) {\n    return this.http.post(\"http://localhost:3000/api/user/findUser\", { username: username });\n  }\n\n\n  setCurrentUrl(curr: string){\n    if( this.getCurrentUrl() != curr ) {\n        this.setPrevUrl(this.getCurrentUrl());\n    }\n    localStorage.setItem('currUrl', curr);\n  }\n  getCurrentUrl(){\n    return localStorage.getItem('currUrl');\n  }\n  setPrevUrl(prev:string){\n    localStorage.setItem('prevUrl', prev);\n  }\n  getPrevUrl(){\n    return localStorage.getItem('prevUrl');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { SubmissionService } from '../submission/submission.service';\nimport { FormGroup, FormControl, Validators, ValidationErrors } from '@angular/forms';\nimport { MaterialsService } from '../admin-manage-material/material.service';\n\n@Component({\n  selector: 'app-collector-record-submission',\n  templateUrl: './collector-record-submission.component.html',\n  styleUrls: ['./collector-record-submission.component.css']\n})\nexport class CollectorRecordSubmissionComponent implements OnInit {\n\n  userType = this.authService.getUserType();\n  collectors:any = [];\n  totalPoints = 0;\n  ecoLevel = null;\n  mobile = false;\n\n  currentRoute = window.location.pathname;\n  appointments = [];\n  dataSource = [];\n\n  isRecordingSubmission = false;\n  isAddingSubmission = false;\n  selectedAppointment:any = {};\n\n\n\n  form_submission: FormGroup;\n  initialError = 'required';\n  hide = true;\n\n  submission_materialError = this.initialError;\n  submission_recyclerError = this.initialError;\n  submission_weightError   = this.initialError;\n\n  recyclerExist = false;\n  materialExist = false;\n\n  selectedMaterial;\n  recycler;\n  material;\n\n  materials;\n\n  constructor( public authService: AuthService, public subService: SubmissionService, public matService: MaterialsService ) { }\n\n  ngOnInit(): void {\n    this.setMode();\n    this.subscribeToSubmissionRetrieve();\n    this.getAppointment();\n    this.getMaterials();\n\n    this.subscribeToMaterialExist();\n    this.subscribeToRecyclerExist();\n    this.setFormGroup();\n\n    //experimenting features for other part\n    this.matService.getCollectors('5e6717329d4a704b408a51e9').subscribe( result => {\n      //console.log(result);\n      this.collectors = result;\n      for ( let collector of this.collectors ) {\n        console.log(collector);\n      }\n    });\n    this.authService.getPointsUpdatedListener().subscribe( result => {\n      this.totalPoints = result.totalPoints;\n      this.ecoLevel = result.ecoLevel;\n    })\n    this.authService.getPoints();\n\n  }\n\n\n  onResize(event) {\n\n    if (window.screen.width < 850) { // 768px portrait\n      this.mobile=true;\n    } else {\n      this.mobile=false;\n    }\n    //console.log('size: ' + window.screen.width + \" mobile: \" + this.mobile);\n  }\n  setMode(){\n    if ( this.currentRoute == '/add-submission') {\n      this.authService.setCurrentUrl(this.currentRoute);\n      this.isAddingSubmission = true;\n    }\n    else {\n        this.authService.setCurrentUrl(this.currentRoute);\n    }\n  }\n\n  getMaterials() {\n    this.matService.getAllMaterials().subscribe( result => {\n      this.materials = result.materials;\n    });\n  }\n  subscribeToSubmissionRetrieve(){\n    this.subService.getSubRetrievedListerner().subscribe( result => {\n      //this.checkDataIntegrity(result);\n      //console.log(result);\n      this.convertToTableData(result);\n      //console.log(this.appointments);\n    });\n  }\n  subscribeToRecyclerExist(){\n    this.authService.getRecyclerExistListener().subscribe( result => {\n      if ( result ) {\n        //console.log(\"have result\");\n        this.recyclerExist = true;\n        this.recycler = result;\n        //console.log(this.recycler);\n        this.form_submission.controls['recycler'].updateValueAndValidity();\n      }\n    });\n  }\n  subscribeToMaterialExist(){\n    this.matService.getMaterialExistListener().subscribe( result => {\n      if ( result ) {\n        this.materialExist = true;\n        this.material = result;\n        //console.log(this.material);\n        this.form_submission.controls['material'].updateValueAndValidity();\n      }\n    });\n  }\n\n  submit() {\n    if ( this.form_submission.invalid ) {\n      return\n    }\n\n    let today = new Date();\n    let date = today.getFullYear()+'/'+  ('0'+(today.getMonth()+1)).slice(-2)  +'/'+('0'+today.getDate()).slice(-2);\n    let submission;\n\n    if ( !this.isAddingSubmission ) {\n      submission = {\n        _id: this.selectedAppointment._id,\n        submissionID: this.selectedAppointment.submissionID,\n        proposedDate: this.selectedAppointment.proposedDate,\n        actualDate: date,\n        weightInKg: this.form_submission.get('weight').value,\n        material: this.selectedAppointment.material,\n        pointsAwarded: null,\n        status: 'Submitted',\n        recycler: this.selectedAppointment.recycler,\n        collector: this.selectedAppointment.collector\n      };\n\n      this.subService.updateSubmission(submission);\n      //console.log(submission);\n      this.isRecordingSubmission = false;\n    }\n\n\n    else {\n      submission = {\n        //_id: this.selectedAppointment._id,\n        submissionID: null,\n        proposedDate: null,\n        actualDate: date,\n        weightInKg: this.form_submission.get('weight').value,\n        material: this.material._id,\n        pointsAwarded: null,\n        status: 'Submitted',\n        recycler: this.recycler._id,\n        collector: this.authService.getUserId()\n      }\n      this.subService.addSubmission(submission);\n      this.setFormGroup();\n      //console.log(submission);\n    }\n\n\n\n\n  }\n\n\n\n  convertToTableData( dataSource ){\n    this.appointments = [];\n    this.appointments = dataSource;\n    this.dataSource = this.appointments;\n    /*console.log('table updated');\n    console.log(dataSource);\n    console.log(this.dataSource);*/\n  }\n\n  getAppointment(){\n    if ( this.userType == 'collector' ) {\n      this.subService.getSubmissions(null);\n    } else {\n      this.subService.getSubmissions(null, this.authService.getUserId());\n    }\n  }\n\n  findUser(username) {\n    //console.log('changed: ' + username);\n\n    if ( username ) {\n      if ( this.userType == 'collector' ) {\n        this.dataSource = this.appointments.filter( appt => { return appt.recyclerUsername == username});\n      } else {\n        this.dataSource = this.appointments.filter( appt => { return appt.collectorUsername == username});\n      }\n\n    } else {\n      this.dataSource = this.appointments;\n    }\n\n\n  }\n\n  reset() {\n    this.subService.genDummySub();\n  }\n\n\n  selectAppointment(selectedAppointment) {\n    //console.log('selectedAppointment:');\n    //console.log(selectedAppointment);\n    if ( this.userType == 'collector' ) {\n      this.selectedAppointment = selectedAppointment;\n      this.isRecordingSubmission=true;\n      //this.setFormGroup();\n      this.form_submission.get('material').disable();\n      this.form_submission.get('recycler').disable()\n      this.form_submission.get('material').setValue(this.selectedAppointment.materialName);\n      this.form_submission.get('recycler').setValue(this.selectedAppointment.recyclerUsername);\n    }\n  }\n\n  selectionChanged(selectedMaterial) {\n    //console.log(selectedMaterial);\n    this.form_submission.get('material').setValue(selectedMaterial);\n    this.form_submission.controls['material'].updateValueAndValidity();\n    this.validateSubmissionInput('submission_material');\n  }\n\n\n\n\n\n\n\n\n\n\n\n\n\n  setFormGroup() {\n      this.form_submission = new FormGroup({\n        'material': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            this.validateMaterialExist.bind(this)\n          ]\n        }),\n\n        'recycler': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            this.validateRecyclerExist.bind(this)\n          ]\n        }),\n\n        'weight': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.min(0.01)\n          ]\n        })\n\n      });\n  }\n\n  validateMaterialExist(control: FormControl): ValidationErrors {\n    if(this.materialExist){\n      return null;\n    }\n    return {notMaterial: 'true'};\n  }\n\n  validateRecyclerExist(control: FormControl): ValidationErrors {\n    if(this.recyclerExist){\n      return null;\n    }\n    return {notRecycler: 'true'};\n  }\n\n  validateSubmissionInput(input: string){\n\n\n\n    switch (input) {\n      case 'submission_material' :\n        this.materialExist = false;\n        this.material = {};\n        this.form_submission.controls['material'].updateValueAndValidity();\n        this.matService.checkMaterialExist(this.form_submission.get('material').value);\n        if (this.form_submission.get('material').hasError('notMaterial')) {\n          this.submission_materialError  = \"material not found\";\n        }\n        if(this.form_submission.get('material').hasError('required')) {\n          this.submission_materialError  = \"required\";\n        }\n        break;\n\n      case 'submission_recycler' :\n        this.recyclerExist = false;\n        this.recycler = {};\n        this.form_submission.controls['recycler'].updateValueAndValidity();\n        this.authService.checkRecyclerExist(this.form_submission.get('recycler').value);\n        if (this.form_submission.get('recycler').hasError('notRecycler')) {\n          this.submission_recyclerError = \"recycler not found\";\n        }\n        if(this.form_submission.get('recycler').hasError('required')) {\n          this.submission_recyclerError = \"required\";\n        }\n        break;\n\n      case 'submission_weight' :\n        if(this.form_submission.get('weight').hasError('required')) {\n          this.submission_weightError  = \"required\";\n        }\n        if(this.form_submission.get('weight').hasError('min')) {\n          this.submission_weightError  = \"minimum 0.01\";\n        }\n        break;\n    }\n  }\n\n\n\n}\n","<user-nav (window:resize)=\"onResize($event)\">\n  <!--title bar with pic-->\n  <div class=\"page-header\" [style.background]=\"'url(/assets/home-pic/recycler_bla35_169.jpg)'\">\n    <div class=\"container-fluid \">\n        <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <div class=\"page-caption\">\n                <h1 class=\"page-title\">{{ isAddingSubmission? 'Add Submission':isRecordingSubmission? 'Record Submission':'View Appointment'}}</h1>\n              </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n  <main>\n    <!--{{isAddingSubmission}}\n    {{ collectors }}\n    current collector's totalPoints: {{ totalPoints }}\n    <br>materials: {{ materials }}\n    {{ ecoLevel }}\n    {{ currentRoute }}\n    {{ selectedAppointment.materialName }} {{ selectedAppointment.recyclerUsername}}\n    <br>reset dummy submissions: <a mat-button class=\"btn-reset\" (click)=\"reset()\">reset</a>-->\n    <div class=\"container-fluid con-main\">\n\n      <div *ngIf=\"!isAddingSubmission && !isRecordingSubmission\" class=\"row mt-2 row-table-appointment\">\n        <div class=\"row row-control \">\n          <h2>Appointments</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <label *ngIf=\"!mobile\" for=\"search_recycler\">{{ userType=='collector'? 'Recycler':'Collector'}}:</label>\n            <div ng-controller=\"myCtrl\">\n              <input #myInput (keyup)=\"findUser(myInput.value)\" ng-model=\"myValue\"  name=\"search_recycler\" value=\"\" placeholder=\" e.g. username\" class=\"input-search\">\n            </div>\n          </div>\n        </div>\n\n        <mat-card class=\"card-table-appointment\">\n          <table *ngIf=\"dataSource.length>0\" class=\"table table-appointment table-hover\">\n            <thead>\n              <tr>\n                <th>{{userType=='collector'? 'Recycler':'Collector'}}</th>\n                <th>Proposed Date</th>\n                <th>Material</th>\n                <th *ngIf=\"!mobile\">Status</th>\n                <th *ngIf=\"userType=='collector'\"></th>\n              </tr>\n            </thead>\n            <tbody>\n              <tr *ngFor=\"let appt of dataSource\" (click)=\"selectAppointment(appt)\">\n                <td>{{ userType=='collector'? appt.recyclerUsername : appt.collectorUsername }}</td>\n                <td>{{ appt.proposedDate }}</td>\n                <td>{{ appt.materialName }}</td>\n                <td *ngIf=\"!mobile\">{{ appt.status }}</td>\n                <th *ngIf=\"userType=='collector'\"><mat-icon >navigate_next</mat-icon></th>\n              </tr>\n            </tbody>\n          </table>\n          <div *ngIf=\"dataSource.length==0\" class=\"text-center p-3\">\n            No Appointment{{ appointments.length>0? userType==\"collector\"? ' with recycler \\'' + myInput.value + '\\'' :' with collector \\'' + myInput.value + '\\'':'' }}  <!--{{ myInput.length>0? myInput.value : 'No Appointment' }}-->\n          </div>\n        </mat-card>\n      </div>\n\n\n      <!--\n        5. The Collector selects the submissionID that matches the material\n        to be submitted and enters the weight in kg.\n\n        5b. If the submission is without a prior appointment, the Collector\n        records the type of material, Recycler’s username and weight in Kg.\n        The submission details are updated accordingly.\n\n        form details:\n          1. type of material\n          2. recycler username\n          3. weight in kg (mandatory)\n      -->\n\n      <!-- personal detail input group START -->\n      <div *ngIf=\"isAddingSubmission || isRecordingSubmission \" class=\"row mt-2 row-form-submission\">\n        <!-- personal detail button group and header START -->\n        <div class=\"row row-control \">\n          <h2>Submission Details</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button  class=\"btn-cancel\" (click)=\"selectedAppointment={}; isRecordingSubmission=false; setFormGroup(); form_submission.get('material').enable(); form_submission.get('recycler').enable()\">Cancel</a>\n            <a mat-button  id=\"btnEdit1\" (click)=\"submit()\" class=\"btn-edit\"> Submit </a>\n          </div>\n        </div>\n        <!-- personal detail button group and header END -->\n        <!-- personal detail from START -->\n        <mat-card class=\"card-form-submission\">\n          <!-- recycler form START -->\n\n\n            <form [formGroup]=\"form_submission\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Material</mat-label>\n                <input\n                  name=\"material\"\n\n                  matInput\n                  type=\"text\"\n\n                  formControlName=\"material\"\n                  (ngModelChange)=\"validateSubmissionInput('submission_material')\"\n                  >\n                  <mat-error *ngIf=\"form_submission.get('material').invalid\">{{ submission_materialError  }}</mat-error>\n                  <div *ngIf=\"isAddingSubmission\" class=\"input-group-append\">\n                      <mat-select  class=\"pat-search\" disableOptionCentering=true [(value)]=\"selectedMaterial\" (selectionChange)=\"selectionChanged(selectedMaterial)\">\n                          <mat-option *ngFor=\"let material of materials\" [value]=\"material.materialName\">{{ material.materialName }}</mat-option>\n\n                      </mat-select>\n                  </div>\n              </mat-form-field>\n\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Recycler</mat-label>\n                <input\n                  name=\"recycler\"\n                  matInput\n                  type=\"text\"\n\n                  formControlName=\"recycler\"\n                  (ngModelChange)=\"validateSubmissionInput('submission_recycler')\"\n                  placeholder=\"new password\"\n                  >\n                  <mat-error *ngIf=\"form_submission.get('recycler').invalid\">{{ submission_recyclerError }}</mat-error>\n                  <!--<div class=\"input-group-append\">\n                      <mat-select  *ngIf=\"isAddingSubmission\" class=\"pat-search\" disableOptionCentering=true>\n                          <mat-option value=\"Basic\">Basic</mat-option>\n                          <mat-option value=\"Advanced\">Advanced</mat-option>\n                      </mat-select>\n                  </div>-->\n              </mat-form-field>\n\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Weight</mat-label>\n                <input\n                  name=\"weight\"\n                  matInput\n                  type=\"number\"\n\n                  formControlName=\"weight\"\n                  (ngModelChange)=\"validateSubmissionInput('submission_weight')\"\n\n                  >\n                  <mat-error *ngIf=\"form_submission.get('weight').invalid\">{{ submission_weightError }}</mat-error>\n              </mat-form-field>\n\n\n            </form>\n\n          <!-- recycler form END -->\n        </mat-card>\n        <!-- personal detail from END -->\n      </div>\n      <!-- personal detail input group END -->\n\n\n\n\n\n\n\n\n    </div>\n  </main>\n</user-nav>\n\n\n<!--\n\n  submission (Appointment details):\n    1. proposed date\n    2. material name\n    3. status\n    4, recycler username (if recycler not specified)\n\n\n-->\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'dashboard-admin',\n  templateUrl: 'dashboard-admin.component.html',\n  styleUrls: ['dashboard-admin.component.css'],\n})\n\nexport class DashboardAdminComponent {\n  constructor(private titleService:Title, public authService: AuthService) {\n    this.titleService.setTitle(\"ESWeb | Admin Dashboard\"\n    );}\n\n\n  userName ='';\n\n  ngOnInit(){\n      this.authService.setCurrentUrl(window.location.pathname);\n    this.userName = this.authService.getFullName();\n  }\n}\n","<dashboard-sidenav>\n<div class=\"container-fluid bg-light\">\n\n\n\n\n  <div class=\"container-fluid mt-2\">\n    <h1 class=\"mat-h1, mat-title\">Dashboard</h1>\n  </div>\n  <div class=\"container-fluid\">\n    <!--first row-->\n  <div class=\"row\">\n\n    <div class=\"container-fluid col-lg-12 col-md-12 col-sm-12\">\n\n      <mat-card style=\"min-height: 100%;\">\n        <mat-card-header>\n          <mat-card-title>Welcome Back!</mat-card-title>\n        <mat-card-subtitle>{{ userName }}</mat-card-subtitle>\n        </mat-card-header>\n\n        <mat-card-content>\n\n        </mat-card-content>\n      </mat-card>\n\n\n    </div>\n\n\n\n  </div>\n</div>\n\n\n\n\n  <div class=\"container-fluid col-lg-12 col-md-12 col-sm-12 mt-2\">\n    <!--Second row-->\n\n    <div class=\"row\">\n      <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>Manage Material</mat-card-title>\n            <mat-card-subtitle>Add, Update and Delete the detail of materials.</mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n\n              <div class=\"container-fluid text-right\">\n                <button routerLink=\"/admin/manage-material\" routerLinkActive=\"active\" class=\"btn_color\" mat-fab><mat-icon>edit</mat-icon></button>\n              </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <div class=\"container-fluid col-lg-8 col-md-8 col-sm-12 mt-2\">\n        <mat-card style=\"min-height: 100%;\">\n          <mat-card-header>\n            <mat-card-title>Submmision History</mat-card-title>\n            <mat-card-subtitle>The entire recycle submission recorded arcoss the system.</mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <br>\n            <div class=\"container-fluid text-center col-8\">\n              <button routerLink=\"/history\" class=\"btn_color\" mat-raised-button color=\"primary\" style=\"min-width: 100%;\">View All Submmissions</button>\n          </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n\n    </div>\n</div>\n</div>\n</dashboard-sidenav>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'dashboard-collector',\n  templateUrl: 'dashboard-collector.component.html',\n  styleUrls: ['dashboard-collector.component.css'],\n})\n\nexport class DashboardCollectorComponent implements OnInit{\n  constructor(private titleService:Title, public authService: AuthService) {\n    this.titleService.setTitle(\"ESWeb | Collector's Dashboard\"\n    );}\n\n\n    //variable for dynamic data\n    username = ''\n    ecolevel = '';\n    pointToLevel = '';\n    ecoPoints = '';\n    pointsNeeded = '333';\n    pointsNeededCaption = '';\n    upperLevel = 'EcoWarrior';\n    ngOnInit(){\n\n      this.authService.getPointsUpdatedListener().subscribe( result => {\n        this.ecolevel = result.ecoLevel;\n        this.ecoPoints = (Math.round(Number(result.totalPoints)*100)/100).toString();\n      });\n      this.authService.getPoints();\n\n      this.authService.setCurrentUrl(window.location.pathname);\n      this.username = this.authService.getFullName();\n\n      this.pointToLevel = 'Your Points:';\n\n      this.pointsNeededCaption = 'Get ' +  this.pointsNeeded + ' more points to unlock ' + this.upperLevel;\n    }\n}\n","<user-nav>\n  <!--title bar with pic-->\n  <div class=\"page-header\" [style.background]=\"'url(/assets/home-pic/recycler_bla35_169.jpg)'\">\n    <div class=\"container-fluid \">\n        <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <div class=\"page-caption\">\n                <h1 class=\"page-title\">Dashboard</h1>\n              </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n  <main>\n\n    <div class=\"container-fluid\">\n      <div class=\"container-fluid mt-2\">\n\n      <!--first row-->\n      <div class=\"row\">\n\n        <div class=\"container-fluid col-lg-12 col-md-12 col-sm-12 mt-2\">\n\n          <mat-card style=\"min-height: 100%;\">\n            <mat-card-header>\n              <mat-card-title>Welcome Back!</mat-card-title>\n            <mat-card-subtitle>{{ username }}</mat-card-subtitle>\n            </mat-card-header>\n\n            <mat-card-content>\n              <div class=\"container-fluid text-right\">\n                <button routerLink=\"/manage-profile\" mat-raised-button color=\"primary\">Manage User Profile</button>\n            </div>\n          </mat-card-content>\n          </mat-card>\n\n\n        </div>\n\n\n\n      </div>\n    </div>\n\n      <!--second row-->\n      <div class=\"container-fluid col-lg-12 col-md-12 col-sm-12 mt-2\">\n        <!--Second row-->\n\n        <div class=\"row\">\n          <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n            <mat-card>\n              <mat-card-header>\n                <mat-card-title>Collection:</mat-card-title>\n                <mat-card-subtitle>Let's show the world what you had collected.</mat-card-subtitle>\n              </mat-card-header>\n              <mat-card-content>\n\n\n\n                  <div class=\"container-fluid text-right\">\n\n\n                    <button routerLink=\"/add-submission\" class=\"btn_color\" mat-fab><i class=\"fas fa-plus\"></i></button>\n\n                  </div>\n\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n            <mat-card style=\"min-height: 100%;\">\n              <mat-card-header>\n                <mat-card-title>Submmision:</mat-card-title>\n                <mat-card-subtitle>Review your contribution to our mother nature.</mat-card-subtitle>\n              </mat-card-header>\n              <mat-card-content>\n                <br>\n                <div class=\"container-fluid text-center col-8\">\n                  <button routerLink=\"/history\" class=\"btn_color\" mat-raised-button color=\"accent\" style=\"min-width: 100%;\">View All Submmission</button>\n              </div>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n          <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n            <mat-card style=\"min-height: 100%;\">\n              <mat-card-header>\n                <mat-card-title>EcoPoints:</mat-card-title>\n                <mat-card-subtitle>{{ pointToLevel }} {{ ecoPoints }}</mat-card-subtitle>\n              </mat-card-header>\n              <mat-card-content>\n                <br>\n                <div class=\"container-fluid text-center col-8\">\n                  <button class=\"btn_color\" mat-stroked-button color=\"primary\" style=\"min-width: 100%;\">Redeem Rewards</button>\n              </div>\n              </mat-card-content>\n            </mat-card>\n          </div>\n\n        </div>\n\n\n\n\n      </div>\n\n    </div>\n  </main>\n</user-nav>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from 'src/app/auth/auth.service';\n//import { MatDialog } from '@angular/material/dialog';\n\n@Component({\n  selector: 'dashboard-sidenav',\n  templateUrl: './dashboard-sidenav.component.html',\n  styleUrls: ['./dashboard-sidenav.component.css']\n})\nexport class DashboardSideNavComponent {\n\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public authService: AuthService) {}\n\n  logout() {\n    this.authService.logout();\n  }\n}\n\n/*\nexport class LogoutDialogComponent {\n  constructor(public dialog: MatDialog) {}\n\n  openDialog(){\n    const dialogRef = this.dialog.open(DialogLogoutContent);\n\n    dialogRef.afterClosed().subscribe(result => {\n      console.log(`Dialog result: ${result}`);\n    });\n  }\n}\n\n@Component({\n  selector: 'logout-dialog',\n  templateUrl: 'logout-dialog.html',\n})\nexport class DialogLogoutContent {}\n*/\n","<mat-sidenav-container class=\"sidenav-container\" >\n  <mat-sidenav\n    #drawer\n    class=\"sidenav\"\n\n    fixedInViewport=\"false\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\">\n\n    <mat-toolbar class=\"toolbar_title\" > ESWEB | Admin </mat-toolbar>\n\n    <mat-nav-list>\n      <a routerLink=\"/dashboard-admin\" routerLinkActive=\"active-link\" class=\"sidenav_item\" mat-list-item href=\"#\"><mat-icon>home</mat-icon><span>&nbsp; Dashboard</span></a>\n      <a routerLink=\"/history\" routerLinkActive=\"active-link\" class=\"sidenav_item\" mat-list-item href=\"#\"><mat-icon>history</mat-icon><span>&nbsp; Submission History </span></a>\n      <a routerLink=\"/admin/manage-material\" routerLinkActive=\"active-link\" class=\"sidenav_item\" mat-list-item href=\"#\"><mat-icon>edit</mat-icon><span>&nbsp; Manage Material </span></a>\n      <a (click)='logout()' routerLink=\"/home\" routerLinkActive=\"active-link\" class=\"sidenav_item\" mat-list-item href=\"#\"><mat-icon>exit_to_app</mat-icon><span> &nbsp;  Logout</span></a>\n\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <div class=\"toolbar_2\">\n    <mat-toolbar style=\"color:white\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n\n      <!--<span class=\"span-title\"> ESWeb </span>-->\n      <!--<i class=\"material-icons\">account_circle</i>-->\n      <span class=\"spacer\">\n        <i class=\"fas fa-recycle\"></i>\n        <span> ESWEB</span>\n      </span>\n\n    <div class=\"account_menu\">\n      <button mat-icon-button [matMenuTriggerFor]=\"menu\" aria-label=\"account menu button\">\n          <mat-icon>more_vert</mat-icon>\n      </button>\n      <mat-menu #menu=\"matMenu\">\n        <button mat-menu-item>\n          <mat-icon>account_circle</mat-icon>\n          <span>Admin</span>\n        </button>\n\n       <button mat-menu-item>\n        <mat-icon>exit_to_app</mat-icon>\n        <span>Logout</span>\n      </button>\n    </mat-menu>\n   </div>\n\n      <!--\n      <a class=\"text-white\" href=\"#\" >Login</a>\n      <a class=\"text-white\" href=\"#\">Sign up</a>\n      -->\n\n      <!--<button mat-button class=\"home-button\" > Home </button>-->\n\n\n    </mat-toolbar>\n  </div>\n    <!-- Add Content Here -->\n    <ng-content></ng-content>\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport { ThrowStmt } from '@angular/compiler';\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'dashboard-user',\n  templateUrl: 'dashboard-user.component.html',\n  styleUrls: ['dashboard-user.component.css'],\n})\n\nexport class DashboardUserComponent {\n  constructor(private titleService:Title, public authService:AuthService) {\n    this.titleService.setTitle(\"ESWeb | User Home\"\n    );}\n\n\n    //variable for dynamic data\n    userName ='';\n    ecolevel = '';\n    pointToLevel = '';\n    ecoPoints = '';\n    pointsNeeded = '333';\n    pointsNeededCaption = '';\n    upperLevel = 'EcoWarrior';\n    upperPoints = 0;\n    progress = 0;\n    ngOnInit(){\n      this.authService.setCurrentUrl(window.location.pathname);\n      this.userName = this.authService.getFullName();\n      this.pointToLevel = 'Your Points:';\n\n      this.authService.getPointsUpdatedListener().subscribe( result => {\n        this.ecolevel = result.ecoLevel.charAt(0).toUpperCase() + result.ecoLevel.slice(1);\n        this.ecoPoints = (Math.round(Number(result.totalPoints)*100)/100).toString();\n\n        if ( Number(this.ecoPoints) >= 1000 ) {\n          this.upperLevel = 'Eco Warior'\n          this.pointsNeeded = '0';\n          this.upperPoints = 1000;\n        } else if ( Number(this.ecoPoints) >= 500 ) {\n          this.upperLevel = 'Eco Warior'\n          this.pointsNeeded = (1000 - Number(this.ecoPoints)).toString();\n          this.upperPoints = 1000;\n        } else if ( Number(this.ecoPoints) >= 100 ) {\n          this.upperLevel = 'Eco Hero';\n          this.pointsNeeded = (500 - Number(this.ecoPoints)).toString();\n            this.upperPoints = 500;\n        } else {\n          this.upperLevel = 'Eco Saver';\n          console.log('ecoPoints: ' + this.ecoPoints );\n          this.pointsNeeded = (100 - Number(this.ecoPoints)).toString();\n          this.upperPoints = 100;\n        }\n\n        this.pointsNeeded = (Math.round(Number(this.pointsNeeded)*100)/100).toString();\n        this.progress = 100/this.upperPoints*Number(this.ecoPoints);\n        this.pointsNeededCaption = 'Get ' +  this.pointsNeeded + ' more points to unlock ' + this.upperLevel;\n        if ( Number(this.ecoPoints) >= 1000 ) {\n          this.pointsNeededCaption = 'You have reached the pinnacle of Recycling'\n        }\n      });\n      this.authService.getPoints();\n\n\n\n    }\n\n    getUrl(){\n      return \"url('/src/assets/home-pic/recycler_bla35_169.jpg')\"\n    }\n}\n","<user-nav>\n  <!--<h1 class=\"m-2 mb-3 text-dark\">DASHBOARD</h1>-->\n      <!--title bar with pic-->\n      <div class=\"page-header\" [style.background]=\"'url(/assets/home-pic/recycler_bla35_169.jpg)'\">\n        <div class=\"container-fluid \">\n            <div class=\"row\">\n                <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n                  <div class=\"page-caption\">\n                    <h1 class=\"page-title\">Dashboard</h1>\n                  </div>\n                </div>\n            </div>\n        </div>\n      </div>\n<!--content-->\n<div class=\"container-fluid\">\n  <div class=\"container-fluid mt-2\">\n\n  <!--first row-->\n  <div class=\"row\">\n\n    <div class=\"container-fluid col-lg-12 col-md-12 col-sm-12 mt-2\">\n\n      <mat-card style=\"min-height: 100%;\">\n        <mat-card-header>\n          <mat-card-title>Welcome Back!</mat-card-title>\n        <mat-card-subtitle>{{ userName }}</mat-card-subtitle>\n        </mat-card-header>\n\n        <mat-card-content>\n          <div class=\"container-fluid text-right\">\n            <button mat-raised-button color=\"primary\">Manage User Profile</button>\n        </div>\n      </mat-card-content>\n      </mat-card>\n\n\n    </div>\n\n\n\n  </div>\n</div>\n\n  <!--second row-->\n  <div class=\"container-fluid col-lg-12 col-md-12 col-sm-12 mt-2\">\n    <!--Second row-->\n\n    <div class=\"row\">\n      <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n        <mat-card>\n          <mat-card-header>\n            <mat-card-title>Appointment:</mat-card-title>\n            <mat-card-subtitle>Make a new appointment with EcoSave's Collector to submit your material today. </mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n\n\n\n              <div class=\"container-fluid text-right\">\n\n\n                <button class=\"btn_color\" mat-fab><i class=\"fas fa-plus\"></i></button>\n\n              </div>\n\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n        <mat-card style=\"min-height: 100%;\">\n          <mat-card-header>\n            <mat-card-title>Submmision:</mat-card-title>\n            <mat-card-subtitle>It's time to review your contribution to our mother nature.</mat-card-subtitle>\n          </mat-card-header>\n          <mat-card-content>\n            <br>\n            <div class=\"container-fluid text-center col-8\">\n              <button class=\"btn_color\" mat-raised-button color=\"primary\" style=\"min-width: 100%;\">View All Submmission</button>\n          </div>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n      <div class=\"container-fluid col-lg-4 col-md-4 col-sm-12 mt-2\">\n        <mat-card>\n        <mat-card-header>\n          <mat-card-title>{{ ecolevel }}&nbsp;<i class=\"fas fa-crown\"></i></mat-card-title>\n          <mat-card-subtitle>\n            {{ pointToLevel }}\n            {{ ecoPoints }}\n          </mat-card-subtitle>\n        </mat-card-header>\n\n          <mat-card-content>\n            <div class=\"container-fluid text-right mt-3 mb-3\">\n              <mat-progress-bar mode=\"determinate\" [value]=\"progress\"></mat-progress-bar>\n            <i class=\"fab fa-jedi-order\"></i>\n          </div>\n          <div class=\"container-fluid text-center\">\n            <span class=\"font-italic text-center\">{{ pointsNeededCaption }}</span>\n         </div>\n         </mat-card-content>\n        </mat-card>\n        </div>\n\n    </div>\n\n\n\n\n  </div>\n\n</div>\n</user-nav>\n","import { Component, OnInit } from '@angular/core';\nimport { CreateMaterialService } from '../shared/create-material.service';\n\n//import { MatDialogRef } from '@angular/material/dialog';\n\n@Component({\n  selector:'create-material-form',\n  templateUrl: './create-material-form.component.html',\n  styleUrls: ['./create-material-form.component.css']\n})\nexport class CreateMaterialFormComponent implements OnInit{\n  constructor(public service:CreateMaterialService){}\n\n  ngOnInit(){\n\n  }\n\n  //onClear(){\n    //this.service.form.reset();\n    //this.service.form.intializeFormGroup();\n  //}\n\n\n\n\n}\n","<form [formGroup]=\"service.form\" class=\"normal-form\">\n  <div class=\"container\">\n\n  <mat-grid-list cols=\"2\" rowHeight=\"300px\">\n    <div class=\"container\">\n      <h1>Create New Material</h1>\n    </div>\n    <mat-grid-tile>\n\n      <div class=\"contoroles-container\">\n        <input type=\"hidden\" formControlName=\"key\">\n        <mat-form-field>\n          <input formControlName=\"materialID\" matInput placeholder=\"Material ID\">\n          <mat-error *ngIf=\"service.form.controls['materialID'].errors?.required\">This field is mandatory!</mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <input formControlName=\"materialName\" matInput placeholder=\"Material Name\">\n          <mat-error *ngIf=\"service.form.controls['materialName'].errors?.required\">This field is mandatory!</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-grid-tile>\n\n    <mat-grid-tile>\n      <div class=\"contoroles-container\">\n        <mat-form-field>\n          <input formControlName=\"description\" matInput placeholder=\"Description\">\n          <mat-error *ngIf=\"service.form.controls['description'].errors?.required\">This field is mandatory!</mat-error>\n        </mat-form-field>\n\n        <mat-form-field>\n          <input formControlName=\"pointsPerKg\" matInput placeholder=\"PointsPerKg\">\n          <mat-error *ngIf=\"service.form.controls['pointsPerKg'].errors?.required\">This field is mandatory!</mat-error>\n        </mat-form-field>\n      </div>\n    </mat-grid-tile>\n  </mat-grid-list>\n\n\n  <div class=\"button-row container-fluid text-right\">\n    <button class=\"mr-2\" mat-raised-button color=\"primary\" type=\"submit\" [disabled]=\"service.form.invalid\">Save Changes</button>\n    <button mat-dialog-close mat-raised-button type=\"submit\">Cancel</button>\n  </div>\n</div>\n</form>\n","import {Component, OnInit, ViewChild} from '@angular/core';\nimport { MatDialogConfig, MatDialogRef } from '@angular/material/dialog';\nimport { MatDialog } from '@angular/material/dialog';\nimport { CreateMaterialFormComponent } from './create-material-form/create-material-form.component';\nimport { CreateMaterialService } from './shared/create-material.service';\nimport { NotificationService } from './shared/notification.service';\n\nexport interface Material {\n  position: number;\n  materialID: string;\n  materialName: string;\n  description: string;\n  pointsPerKg: string;\n}\n\nconst getMaterial: Material[] = [\n  {position:1, materialID:'1', materialName:'Paper',description:'Paper is valuable and accepted for recycling',pointsPerKg:'0.5'},\n  {position:2, materialID:'2', materialName:'Paper',description:'Paper is valuable and accepted for recycling',pointsPerKg:'0.5'},\n  {position:3, materialID:'3', materialName:'Paper',description:'Paper is valuable and accepted for recycling',pointsPerKg:'0.5'}\n\n];\n\n/**\n * @title Basic use of `<mat-table>` (uses display flex)\n */\n@Component({\n  selector: 'material-table',\n  styleUrls: ['datatable.component.css'],\n  templateUrl: 'datatable.component.html',\n})\nexport class DatatableComponent {\n\n  constructor(private dialog: MatDialog,\n    private service: CreateMaterialService,\n    private notificationService: NotificationService,) { }\n  displayedColumns: string[] = ['materialID', 'materialName', 'description', 'pointsPerKg', 'actions'];\n  dataSource = getMaterial;\n\n\n  onCreate(){\n    this.service.intializeFormGroup();\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n    this.dialog.open(CreateMaterialFormComponent,dialogConfig);\n    //this.notificationService.success('New Material has created successfully!');\n  }\n\n  onSubmit(){\n    this.notificationService.success('New Material has created successfully!');\n    this.onClose();\n  }\n\n  onClose(){\n     this.service.form.reset();\n     this.service.intializeFormGroup();\n     //this.dialogRef.close();\n  }\n\n  //update\n  onEdit(row: any){\n   // alert(row.parentElemet);\n    const dialogConfig = new MatDialogConfig();\n    dialogConfig.disableClose = true;\n    dialogConfig.autoFocus = true;\n    dialogConfig.width = \"60%\";\n    this.dialog.open(CreateMaterialFormComponent,dialogConfig);\n  }\n}\n","\n<div class=\"container-fluid\">\n  <h1 class=\"text-center m-4\">Manage Material</h1>\n  <button\n    class=\"m-2\"\n    (click)=\"onCreate()\"\n    mat-raised-button>\n    <mat-icon>add</mat-icon>\n    <span> Create New Material</span>\n  </button>\n\n\n<mat-table  class=\"mat-elevation-z8\">\n  <!-- Position Column -->\n  <ng-container matColumnDef=\"position\">\n    <mat-header-cell *matHeaderCellDef > No. </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.position}} </mat-cell>\n  </ng-container>\n\n  <!-- materialID Column -->\n  <ng-container matColumnDef=\"materialID\">\n    <mat-header-cell *matHeaderCellDef > materialID </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.materialID}} </mat-cell>\n  </ng-container>\n\n  <!-- materialName Column -->\n  <ng-container matColumnDef=\"materialName\">\n    <mat-header-cell *matHeaderCellDef > materialName </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.materialName}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"description\">\n    <mat-header-cell *matHeaderCellDef > description </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.description}} </mat-cell>\n  </ng-container>\n\n  <!-- pointsPerKg Column -->\n  <ng-container matColumnDef=\"pointsPerKg\">\n    <mat-header-cell *matHeaderCellDef > pointsPerKg </mat-header-cell>\n    <mat-cell *matCellDef=\"let element\"> {{element.pointsPerKg}} </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"actions\">\n    <mat-header-cell *matHeaderCellDef></mat-header-cell>\n    <mat-cell *matCellDef=\"let row\">\n      <button mat-icon-button color=\"primary\" #row1 (click)=\"onEdit(row1)\"><mat-icon>edit</mat-icon></button>\n      <button mat-icon-button color=\"warn\"><mat-icon>delete_outline</mat-icon></button>\n    </mat-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"loading\">\n    <mat-footer-cell *matFooterCellDef colspan=\"6\">\n      Loading data...\n    </mat-footer-cell>\n  </ng-container>\n\n  <ng-container matColumnDef=\"noData\">\n    <mat-footer-cell *matFooterCellDef colspan=\"6\">\n      <div class=\"container text-center\">\n        No Data!\n      </div>\n    </mat-footer-cell>\n  </ng-container>\n\n\n\n  <mat-header-row *matHeaderRowDef=\"displayedColumns\"></mat-header-row>\n  <mat-row *matRowDef=\"let row; columns: displayedColumns;\"></mat-row>\n  <!--<mat-footer-row *matFooterRowDef=\"['loading']\" [ngClass]=\"{'hide':Material!=null}\"></mat-footer-row>-->\n  <!--<mat-footer-row *matFooterRowDef=\"['noData']\" ></mat-footer-row>-->\n</mat-table>\n</div>\n\n\n<!--\n<div class=\"container-fluid\">\n  <create-material-form></create-material-form>\n</div>\n-->\n","import { Injectable } from '@angular/core';\nimport { FormGroup, FormControl, Validators } from \"@angular/forms\";\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class CreateMaterialService {\n\n  constructor() { }\n\n  form: FormGroup = new FormGroup({\n    $key: new FormControl(null),\n    materialID: new FormControl('', Validators.required),\n    materialName: new FormControl('', Validators.required),\n    description: new FormControl('', Validators.required),\n    pointsPerKg: new FormControl('', Validators.required),\n  });\n\n  intializeFormGroup(){\n    this.form.setValue({\n      $key:null,\n      materialID:'',\n      materialName: '',\n      description: '',\n      pointsPerKg: ''\n    });\n  }\n}\n\n\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\n//import { MaterialData } from './material-data.model';\nimport { map } from 'rxjs/operators';\nimport { Observable, Subject } from 'rxjs';\nimport { listLazyRoutes } from '@angular/compiler/src/aot/lazy_routes';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class MaterialService implements OnInit{\nconstructor(private http: HttpClient){}\n\n  ngOnInit(){\n  }\n\n  createMaterial(){\n    const material ={\n      materialID: 'A0001',\n      materialName:  'Paper',\n      description:  'Paper is made from tree',\n      pointsPerKg: '0.2'\n    };\n\n    this.http.post('http://localhost:3000/api/material/newMaterial', material);\n  }\n\n}\n","import { Injectable } from '@angular/core';\nimport { MatSnackBar, MatSnackBarConfig } from '@angular/material/snack-bar';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class NotificationService {\n\n  constructor(public snackBar: MatSnackBar) { }\n\n\n  success(msg){\n    this.snackBar.open(msg, '');\n  }\n}\n","import { Component, OnInit } from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { SubmissionService } from '../submission/submission.service';\nimport { MaterialsService } from '../admin-manage-material/material.service';\n\n\n@Component({\n  selector: 'app-history',\n  templateUrl: './history.component.html',\n  styleUrls: ['./history.component.css']\n})\nexport class HistoryComponent implements OnInit {\n  userType;\n\n  histories:any = null;\n  hide=false;\n  firstRow = true;\n  resultt;\n  result\n  mobile = false;\n\n  materials;\n  material;\n\n  sortedByActualDate = false;\n  sortedByStatus = false;\n  sortedBySubmissionID = false;\n\n  viewHistory = false;\n\n  constructor(\n    public authService: AuthService,\n    public subService: SubmissionService,\n    public matService: MaterialsService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.setCurrentUrl(window.location.pathname);\n\n    this.userType = this.authService.getUserType();\n    this.subscribeToMaterialsUpdate();\n    this.getMaterials();\n\n    this.subscribeToHistory();\n    //this.getHistory();\n\n    this.onResize(null);\n\n  }\n\n  selectMaterial(i) {\n    this.material = this.materials[i];\n    //console.log('material ID: ' + this.material._id);\n    this.histories = [];\n    this.getHistory();\n    this.viewHistory = true;\n  }\n\n  subscribeToMaterialsUpdate() {\n    this.matService.getMaterialsUpdatedListener().subscribe( result => {\n      this.getMaterials();\n    });\n  }\n\n  getMaterials() {\n    this.matService.getAllMaterials().subscribe( result => {\n      this.materials = [];\n      for ( let mat of result.materials ) {\n        mat = Object.assign({}, mat);\n        mat.selected = false;\n        this.materials.push(mat);\n      }\n      //console.log(this.materials);\n    });\n  }\n\n\n  onResize(event) {\n\n    if (window.screen.width < 850) { // 768px portrait\n      this.mobile=true;\n    } else {\n      this.mobile=false;\n    }\n    //console.log('size: ' + window.screen.width + \" mobile: \" + this.mobile);\n  }\n\n  subscribeToHistory(){\n    this.subService.getSubRetrievedListerner().subscribe( result => {\n      this.histories = [];\n\n      this.result = result;\n      this.sortedBySubmissionID = false;\n      this.sortHistoryByID();\n      //this.histories = result;\n    });\n  }\n\n\n  convertTableData( dataSource: any ) {\n    this.histories = [];\n    for ( let history of dataSource ) {\n      if(!history.actualDate) { history.actualDate = 0;}\n      history.expanded = false;\n      this.histories.push(history);\n      let detailsForExpandedCell = Object.assign({}, history);\n      detailsForExpandedCell.hide = true;\n      this.histories.push(detailsForExpandedCell);\n    }\n    //console.log(this.histories);\n  }\n\n\n  sortHistoryByID() {\n    this.convertTableData(this.result.sort((a,b)=>(a.submissionID>b.submissionID)?(this.sortedBySubmissionID?-1:1):(this.sortedBySubmissionID?1:-1)));\n    this.sortedBySubmissionID = !this.sortedBySubmissionID;\n  }\n  sortHistoryByActualDate() {\n    this.convertTableData(this.result.sort((a,b)=>(a.actualDate.toString()>b.actualDate.toString())?(this.sortedByActualDate?1:-1):(this.sortedByActualDate?-1:1)));\n    this.sortedByActualDate = !this.sortedByActualDate;\n  }\n  sortHistoryByStatus() {\n    this.convertTableData(this.result.sort((a,b)=>(a.status>b.status)?(this.sortedByStatus?1:-1):(this.sortedByStatus?-1:1)));\n    this.sortedByStatus = !this.sortedByStatus;\n  }\n\n\n  generate() {\n    this.subService.genDummySub();\n  }\n\n  getHistory() {\n    this.subService.getSubmissions(this.material._id);\n  }//5e6717329d4a704b408a51e9 //5e671b519d4a704b408a51eb\n\n  expand(i:any){\n    //console.log('at: ' + i);\n    for ( let y = 0; y < this.histories.length; y++) {\n      if ( y != i ) {\n        this.histories[y].expanded = false;\n        if( this.histories[y].hide != undefined && y != i+1) {\n          this.histories[y].hide = true;\n        }\n      }\n    }\n    this.histories[i].expanded = !this.histories[i].expanded;\n    this.histories[i+1].hide = !this.histories[i+1].hide;\n  }\n}\n","<user-nav *ngIf=\"userType!='admin'\"(window:resize)=\"onResize($event)\">\n  <!--title bar with pic-->\n  <div class=\"page-header\" [style.background]=\"'url(/assets/home-pic/recycler_bla35_169.jpg)'\">\n    <div class=\"container-fluid \">\n        <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <div class=\"page-caption\">\n                <h1 class=\"page-title\">History</h1>\n              </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n  <main>\n    <div class=\"container-fluid page-area\">\n      <div *ngIf=\"!viewHistory\" class=\"row mt-2 row-material-table\">\n        <div class=\"row row-control \">\n          <h2>Select Material</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <!--<a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\"> back </a>-->\n          </div>\n        </div>\n\n        <mat-card>\n          <mat-card-content>\n            <table class=\"table table-materials table-hover\" >\n              <thead>\n                <th>ID</th>\n                <th>Name</th>\n                <th *ngIf=\"!mobile\">Description</th>\n                <th>Points/Kg</th>\n                <th></th>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let mat of materials; let i = index\" class=\"material-row\" (click)=\"selectMaterial(i)\">\n                  <td>{{ mat.materialID }}</td>\n                  <td>{{ mat.materialName }}</td>\n                  <td *ngIf=\"!mobile\">{{ mat.description? mat.description : 'N/A' }}</td>\n                  <td>{{ mat.pointsPerKg || mat.pointsPerKg.toString() == '0'? mat.pointsPerKg : 'N/A' }}</td>\n                  <td><mat-icon >navigate_next</mat-icon><!--<span *ngIf=\"!mobile\">Select</span>--></td>\n                </tr>\n              </tbody>\n            </table>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n\n\n      <div  *ngIf=\"viewHistory\" class=\"row mt-2 row-submissions-table\">\n        <div class=\"row row-control \">\n          <h2>Submission of {{ material? material.materialName:'(material not selected)' }}</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\" (click)=\"viewHistory=false\"> back </a>\n          </div>\n        </div>\n\n        <mat-card class=\"card-my mb-5\">\n          <mat-card-content >\n\n            <div *ngIf=\"!histories || histories.length==0\" class=\"text-center p-3\">\n              No Submission of this material yet.\n            </div>\n\n            <!--<div class=\"emptyHolder text-center\" *ngIf=\"!histories || histories.length==0\">\n              No History\n            </div>-->\n            <table class=\"table table-submissions \" *ngIf=\"histories&&histories.length>0\">\n              <thead>\n                  <tr>\n                    <th (click)=\"sortHistoryByID()\">ID<mat-icon>{{ !sortedBySubmissionID? 'arrow_drop_down':'arrow_drop_up'}}</mat-icon></th>\n\n                    <th *ngIf=\"!mobile\">collector</th>\n                    <th *ngIf=\"!mobile\">recycler</th>\n                    <th *ngIf=\"!mobile\">weight</th>\n                    <th *ngIf=\"!mobile\">points</th>\n\n                    <th (click)=\"sortHistoryByActualDate()\">actualDate<mat-icon>{{ sortedByActualDate? 'arrow_drop_down':'arrow_drop_up'}}</mat-icon></th>\n                    <th (click)=\"sortHistoryByStatus()\">status<mat-icon>{{ sortedByStatus? 'arrow_drop_down':'arrow_drop_up'}}</mat-icon></th>\n                    <th></th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let history of histories; let i = index\"  [attr.hide]=\"history.hide\" [attr.expanded]=\"history.expanded\">\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\">{{ histories[i].submissionID }}</td>\n\n                    <td *ngIf=\"history.hide==undefined && !mobile\" (click)=\"expand(i)\" class=\"extra-col\">{{ history.collectorUsername }}</td>\n                    <td *ngIf=\"history.hide==undefined && !mobile\" (click)=\"expand(i)\" class=\"extra-col\">{{ history.recyclerUsername }}</td>\n                    <td *ngIf=\"history.hide==undefined && !mobile\" (click)=\"expand(i)\" class=\"extra-col\">{{ history.weightInKg || history.weightInKg == '0'? history.weightInKg : 'N/A' }}</td>\n                    <td *ngIf=\"history.hide==undefined && !mobile\" (click)=\"expand(i)\" class=\"extra-col\">{{ history.pointsAwarded || history.pointsAwarded == '0'? history.pointsAwarded : 'N/A' }}</td>\n\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\">{{ history.actualDate? history.actualDate:'N/A' }}</td>\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\">{{ history.status }}</td>\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\"> <mat-icon>{{ history.expanded? 'keyboard_arrow_up':'keyboard_arrow_down' }}</mat-icon> </td>\n                    <!-- <mat-icon>arrow_drop_down</mat-icon> -->\n                    <td *ngIf=\"history.hide!=undefined\" colspan=\"8\" class=\"expandedCell\" [attr.closed]=\"history.hide\">\n                      <div class=\"container-fluid\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-2\"></div>\n                          <div class=\"col-12  col-xl-5\">\n                            <pre><p>submissionID : {{ history.submissionID }}</p></pre>\n                            <pre><p>Collector    : {{ history.collectorFullName }}</p></pre>\n                            <pre><p>Recycler     : {{ history.recyclerFullName }}</p></pre>\n                            <pre><p>proposedDate : {{ history.proposedDate }}</p></pre>\n                            <pre><p>actualDate   : {{ history.actualDate? history.actualDate:'N/A'}}   </p></pre>\n                          </div>\n                          <div class=\"col-12  col-xl-3\">\n                            <pre><p>material     : {{ history.materialName }}</p></pre>\n                            <pre><p>weight       : {{ history.weightInKg || history.weightInKg == '0'? history.weightInKg:'N/A'}} </p></pre>\n                            <pre><p>points       : {{ history.pointsAwarded || history.pointsAwarded == '0'? history.pointsAwarded:'N/A'}}  </p></pre>\n                            <pre><p>status       : {{ history.status }}</p></pre>\n                          </div>\n                          <div class=\"col-xl-2\"></div>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n              </tbody>\n            </table>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </main>\n</user-nav>\n\n\n\n\n\n<dashboard-sidenav *ngIf=\"userType=='admin'\">\n  <main>\n    <div class=\"container-fluid page-area\">\n      <div *ngIf=\"!viewHistory\" class=\"row mt-2 row-material-table admin-row\">\n        <div class=\"row row-control \">\n          <h2>Select Material</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <!--<a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\"> back </a>-->\n          </div>\n        </div>\n\n        <mat-card>\n          <mat-card-content>\n            <table class=\"table table-materials table-hover\" >\n              <thead>\n                <th>ID</th>\n                <th>Name</th>\n                <th *ngIf=\"!mobile\">Description</th>\n                <th>Points/Kg</th>\n                <th></th>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let mat of materials; let i = index\" class=\"material-row\" (click)=\"selectMaterial(i)\">\n                  <td>{{ mat.materialID }}</td>\n                  <td>{{ mat.materialName }}</td>\n                  <td *ngIf=\"!mobile\">{{ mat.description? mat.description : 'N/A' }}</td>\n                  <td>{{ mat.pointsPerKg || mat.pointsPerKg.toString() == '0'? mat.pointsPerKg : 'N/A' }}</td>\n                  <td><mat-icon >navigate_next</mat-icon><!--<span *ngIf=\"!mobile\">Select</span>--></td>\n                </tr>\n              </tbody>\n            </table>\n          </mat-card-content>\n        </mat-card>\n      </div>\n\n\n\n      <div  *ngIf=\"viewHistory\" class=\"row mt-2 row-submissions-table admin-row\">\n        <div class=\"row row-control \">\n          <h2>Submission of {{ material? material.materialName:'(material not selected)' }}</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\" (click)=\"viewHistory=false\"> back </a>\n          </div>\n        </div>\n\n        <mat-card class=\"card-my mb-5\">\n          <mat-card-content >\n\n            <div *ngIf=\"!histories || histories.length==0\" class=\"text-center p-3\">\n              No Submission of this material yet.\n            </div>\n\n            <!--<div class=\"emptyHolder text-center\" *ngIf=\"!histories || histories.length==0\">\n              No History\n            </div>-->\n            <table class=\"table table-submissions \" *ngIf=\"histories&&histories.length>0\">\n              <thead>\n                  <tr>\n                    <th (click)=\"sortHistoryByID()\">ID<mat-icon>{{ !sortedBySubmissionID? 'arrow_drop_down':'arrow_drop_up'}}</mat-icon></th>\n\n                    <th *ngIf=\"!mobile\">collector</th>\n                    <th *ngIf=\"!mobile\">recycler</th>\n                    <th *ngIf=\"!mobile\">weight</th>\n                    <th *ngIf=\"!mobile\">points</th>\n\n                    <th (click)=\"sortHistoryByActualDate()\">actualDate<mat-icon>{{ sortedByActualDate? 'arrow_drop_down':'arrow_drop_up'}}</mat-icon></th>\n                    <th (click)=\"sortHistoryByStatus()\">status<mat-icon>{{ sortedByStatus? 'arrow_drop_down':'arrow_drop_up'}}</mat-icon></th>\n                    <th></th>\n                  </tr>\n              </thead>\n              <tbody>\n                  <tr *ngFor=\"let history of histories; let i = index\"  [attr.hide]=\"history.hide\" [attr.expanded]=\"history.expanded\">\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\">{{ histories[i].submissionID }}</td>\n\n                    <td *ngIf=\"history.hide==undefined && !mobile\" class=\"extra-col\">{{ history.collectorUsername }}</td>\n                    <td *ngIf=\"history.hide==undefined && !mobile\" class=\"extra-col\">{{ history.recyclerUsername }}</td>\n                    <td *ngIf=\"history.hide==undefined && !mobile\" class=\"extra-col\">{{ history.weightInKg || history.weightInKg == '0'? history.weightInKg : 'N/A' }}</td>\n                    <td *ngIf=\"history.hide==undefined && !mobile\" class=\"extra-col\">{{ history.pointsAwarded || history.pointsAwarded == '0'? history.pointsAwarded : 'N/A' }}</td>\n\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\">{{ history.actualDate? history.actualDate:'N/A' }}</td>\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\">{{ history.status }}</td>\n                    <td *ngIf=\"history.hide==undefined\" (click)=\"expand(i)\"> <mat-icon>{{ history.expanded? 'keyboard_arrow_up':'keyboard_arrow_down' }}</mat-icon> </td>\n                    <!-- <mat-icon>arrow_drop_down</mat-icon> -->\n                    <td *ngIf=\"history.hide!=undefined\" colspan=\"8\" class=\"expandedCell\" [attr.closed]=\"history.hide\">\n                      <div class=\"container-fluid\">\n                        <div class=\"row\">\n                          <div class=\"col-xl-2\"></div>\n                          <div class=\"col-12  col-xl-5\">\n                            <pre><p>submissionID : {{ history.submissionID }}</p></pre>\n                            <pre><p>Collector    : {{ history.collectorFullName }}</p></pre>\n                            <pre><p>Recycler     : {{ history.recyclerFullName }}</p></pre>\n                            <pre><p>proposedDate : {{ history.proposedDate }}</p></pre>\n                            <pre><p>actualDate   : {{ history.actualDate? history.actualDate:'N/A'}}   </p></pre>\n                          </div>\n                          <div class=\"col-12  col-xl-3\">\n                            <pre><p>material     : {{ history.materialName }}</p></pre>\n                            <pre><p>weight       : {{ history.weightInKg || history.weightInKg == '0'? history.weightInKg:'N/A'}} </p></pre>\n                            <pre><p>points       : {{ history.pointsAwarded || history.pointsAwarded == '0'? history.pointsAwarded:'N/A'}}  </p></pre>\n                            <pre><p>status       : {{ history.status }}</p></pre>\n                          </div>\n                          <div class=\"col-xl-2\"></div>\n                        </div>\n                      </div>\n                    </td>\n                  </tr>\n              </tbody>\n            </table>\n          </mat-card-content>\n        </mat-card>\n      </div>\n    </div>\n  </main>\n</dashboard-sidenav>\n\n\n<!--\n<mat-card>\n  <mat-card-content>\n    <table class=\"table table-submissions\">\n      <thead>\n        <div class=\"\">\n          <tr>\n            <th>ID</th>\n            <th>actualDate</th>\n            <th>status</th>\n            <th><></th>\n          </tr>\n        </div>\n      </thead>\n      <tbody>\n        <div *ngFor=\"let history of histories\">\n          <tr (click)=\"history.hide = !history.hide\">\n            <td>{{ history.submissionID }}</td>\n            <td>{{ history.actualDate }}</td>\n            <td>{{ history.status }}</td>\n            <td><></td>\n          </tr>\n          <tr *ngIf=\"history.hide == false\" class=\"expandedCell\">\n            <td colspan=\"4\">\n              <pre><p>submissionID : {{ history.submissionID }}</p></pre>\n              <pre><p>Collector    : {{ history.collectorFullName }}</p></pre>\n              <pre><p>Recycler     : {{ history.recyclerFullName }}</p></pre>\n              <pre><p>proposedDate : {{ history.proposedDate }}</p></pre>\n              <pre><p>actualDate   : {{ history.actualDate }}</p></pre>\n              <pre><p>material     : {{ history.materialName }}</p></pre>\n              <pre><p>weight       : {{ history.weightInKg }}</p></pre>\n              <pre><p>points       : {{ history.pointsAwarded }}</p></pre>\n              <pre><p>status       : {{ history.status }}</p></pre>\n            </td>\n          </tr>\n        </div>\n      </tbody>\n    </table>\n  </mat-card-content>\n</mat-card>\n-->\n\n\n\n<!--A list of submissions with the Collector and Recycler names,status, weight in Kg\nand points awarded for the submission are shown for each submission. The total\nweight and total points for the material is also shown.\n\nreference:\ncollector fullname\nrecycler fullname\nmaterialName\n\nSummaryView:\n  collector */\n  recycler */\n  status *\n  weightInKg *\n  points *\n\n\n\nBetter Summary View:\n  submissionID\n  actualDate\n  status\n\n\n\n\nFull Detail:\n  submissionID\n  Collector.fullName\n  Recycler.fullName\n  proposedDate\n  actualDate\n  materialName\n  weightInKg\n  pointsAwarded\n  status\n-->\n","import { Component, OnInit } from '@angular/core';\nimport { Title } from \"@angular/platform-browser\";\nimport { AuthService } from '../auth/auth.service';\n\n\n@Component({\n  selector: 'app-home',\n  templateUrl: 'home.component.html',\n  styleUrls: ['home.component.css'],\n})\n\nexport class HomeComponent implements OnInit{\n  isAuth;\n  constructor(private titleService:Title, public authService: AuthService) {\n    this.titleService.setTitle(\"ESWeb | Home\"\n    );}\n\n    ngOnInit(): void {\n        this.authService.setCurrentUrl(window.location.pathname);\n      this.isAuth = this.authService.getIsAuth();\n    }\n\n    logout(){\n      this.authService.logout();\n    }\n\n}\n","<!-- Navbar-->\n<nav class=\"nav_bar navbar navbar-expand-lg fixed-top py-3\">\n      <div class=\"container-fluid\"><a href=\"#\" class=\"navbar-brand text-uppercase font-weight-bold\"><i class=\"fas fa-recycle\"></i>  ESWeb</a>\n          <button type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\" class=\"navbar-toggler navbar-toggler-right\"><i class=\"fa fa-bars\"></i></button>\n\n          <div id=\"navbarSupportedContent\" class=\"collapse navbar-collapse\">\n              <ul class=\"navbar-nav ml-auto\">\n                  <!--<li class=\"nav-item active \"><a routerLink=\"/home\" routerLinkActive=\"active\"  class=\"nav-link text-uppercase\">Home <span class=\"sr-only\">(current)</span></a></li>-->\n                  <!--<li class=\"nav-item \"><a href=\"#\" class=\"nav-link text-uppercase\">About Us</a></li>-->\n                  <li class=\"nav-item \"><a (click)=\"logout()\" routerLink=\"/\" routerLinkActive=\"active\" class=\"nav-link text-uppercase\" *ngIf=\"isAuth\">logout</a></li>\n                  <li class=\"nav-item \"><a routerLink=\"/auth/signup\" routerLinkActive=\"active\" class=\"nav-link text-uppercase\" *ngIf=\"!isAuth\">Sign Up</a></li>\n                  <li class=\"nav-item \"><a routerLink=\"/auth/login\" routerLinkActive=\"active\" class=\"nav-link text-uppercase\">{{isAuth ? 'go to dashboard' : 'Login'}}</a></li>\n              </ul>\n          </div>\n      </div>\n</nav>\n\n<!--carousel-->\n<div class=\"carousel slide\" id=\"imgSlides\" data-ride=\"carousel\">\n  <ul class=\"carousel-indicators\">\n    <li data-target=\"#imgSlides\" data-slide-to=\"0\" class=\"active\"></li>\n    <li data-target=\"#imgSlides\" data-slide-to=\"1\"></li>\n  </ul>\n\n  <a class=\"carousel-control-prev\" href=\"#imgSlides\" role=\"button\" data-slide=\"prev\">\n    <span class=\"carousel-control-prev-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Previous</span>\n  </a>\n  <a class=\"carousel-control-next\" href=\"#imgSlides\" role=\"button\" data-slide=\"next\">\n    <span class=\"carousel-control-next-icon\" aria-hidden=\"true\"></span>\n    <span class=\"sr-only\">Next</span>\n  </a>\n\n\n  <div class=\"carousel-inner\">\n    <div class=\"carousel-item active\">\n      <img src=\"assets/home-pic/recyclerkid_black_50_169.jpg\" alt=\"titlePic1\" class=\"img-fluid\">\n      <div class=\"carousel-caption\">\n        <h1 class=\"title_h1\"> ESWEB </h1>\n        <h3 class=\"title_h2\"> An Intergrated platform for recycling community </h3>\n        <h4 class=\"title_h4\">Let's become one of the recycling community members!</h4>\n        <a routerLink=\"/auth/login\" class=\"btn btn-success text-light btn_title1\" role=\"button\">\n          Start Recycle\n          <i class=\"fas fa-chevron-right\"></i>\n        </a>\n      </div>\n    </div>\n\n    <div class=\"carousel-item \">\n      <img class=\"img-fluid\" src=\"assets/home-pic/recycler_bla35_169.jpg\" alt=\"titlePic2\">\n      <div class=\"carousel-caption text-left\">\n        <h2 class=\"title2_h2\"> Embrace The Green Economy </h2>\n        <h3 class=\"title2_h3\">Explore this golden opportunity with us</h3>\n        <a href=\"#\" class=\"btn btn-outline-success btn font-weight-bold btn_title2\" role=\"button\">\n          Sign up as green collector\n        </a>\n      </div>\n    </div>\n  </div>\n</div>\n\n<div class=\"jumbotron jumbotron-fluid\">\n  <div class=\"container\">\n    <h1 class=\"display-4\">Waste is Gold</h1>\n    <p class=\"lead\">ESWeb aims to overcome the difficulties of recycling and create a platform to encourage community members to become collectors\n      for recyclable materials.</p>\n  </div>\n</div>\n\n<!--Recycle info-->\n<div class=\"container-fluid bg-white pt-3 pb-3\">\n<div class=\"container\">\n  <h1 class=\"text-center recycle_title\">Recycling Material That We Encourage</h1>\n  <hr class=\"hr_underline\">\n  <div class=\"row\">\n    <div class=\"col-lg-3 col-md-6 col-sm-12 text-center pb-3\">\n      <i class=\"fas fa-recycle recycle_icon1 text-success\"></i>\n      <p class=\"recycle_font\">Glass</p>\n    </div>\n\n    <div class=\"col-lg-3 col-md-6 col-sm-12 text-center pb-3\">\n      <i class=\"fas fa-recycle recycle_icon2 text-warning\"></i>\n      <p class=\"recycle_font\">Metal</p>\n    </div>\n\n    <div class =\"col-lg-3 col-md-6 col-sm-12 text-center pb-3\">\n      <i class=\"fas fa-recycle recycle_icon3 text-danger\"></i>\n      <p class=\"recycle_font\">Paper</p>\n    </div>\n\n    <div class =\"col-lg-3 col-md-6 col-sm-12 text-center pb-3\">\n      <i class=\"fas fa-recycle recycle_icon4 text-primary\"></i>\n      <p class=\"recycle_font\">Plastic</p>\n    </div>\n  </div>\n</div>\n</div>\n<!--\n<div class=\"container-fluid bg-light\">\n\n<div class=\"row\">\n  <div class=\"col-8\">\n    <h2>Happy</h2>\n    <p>Fun and Love</p>\n  </div>\n  <div class=\"col-4 pt-2 pb-2\">\n    <img class=\"img-fluid\" src=\"assets/home-pic/greenplant.jpeg\" alt=\"\">\n  </div>\n</div>\n</div>\n\n-->\n<div class=\"container-fluid bg-light pt-2\">\n<div class=\"container padding mt-5 mb-2\">\n  <div class=\"row text-center padding\">\n    <div class=\"col-12\">\n      <h2 class=\"text-dark\">Follow Us</h2>\n\n    </div>\n    <div class=\"col-12 social padding pb-5\">\n      <a href=\"https://www.facebook.com\"><i class=\"fab fa-facebook\"></i></a>\n      <a href=\"https://www.twitter.com\"><i class=\"fab fa-twitter\"></i></a>\n      <a href=\"https://www.instagram.com\"><i class=\"fab fa-instagram\"></i></a>\n    </div>\n  </div>\n</div>\n</div>\n\n  <footer>\n    <div class=\"container padding\">\n    <div class=\"row text-center\">\n      <div class=\"col-md-4 container-fluid text-left directories\">\n\n        <h3 class=\"font-weight-bold\">Directories</h3>\n        <a class=\"text-left\" href=\"#\">About Us</a>\n      </div>\n\n    <div class=\"col-md-4 container-fluid text-left\">\n\n      <h3 class=\"font-weight-bold\">Contact</h3>\n      <h4 class=\"lead\">Manager :  +60132188322 (Mr.Koi)</h4>\n      <h4 class=\"lead\">Coodinator :  +60173477812 (Mr.Jacky)</h4>\n    </div>\n\n    <div class=\"col-md-4 container-fluid text-left\">\n      <h3 class=\"font-weight-bold\">Our Address</h3>\n      <h4 class=\"lead\">No. 15, Jalan Sri Semantan 1, Off, Jalan Semantan, Bukit Damansara, 50490 Kuala Lumpur</h4>\n    </div>\n\n    <div class=\"col-12\">\n      <hr class=\"light-100\">\n      <h3>&copy; Team J&K | ESWEB 2020 </h3>\n    </div>\n\n  </div>\n  </div>\n  </footer>\n\n\n<!-- For demo purpose -->\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, Validators, FormControl, ValidationErrors } from '@angular/forms';\nimport { Subscription } from 'rxjs';\nimport { Router } from '@angular/router';\nimport { AuthService } from '../auth/auth.service';\nimport { ScheduleData } from '../auth/schedule-data.model';\nimport { Inject }  from '@angular/core';\nimport { DOCUMENT } from '@angular/common';\nimport { MatDialog } from '@angular/material/dialog';\nimport { AddCollectorMaterialDialogComponent } from '../add-collector-material-dialog/add-collector-material-dialog.component';\nimport { MaterialsService } from '../admin-manage-material/material.service';\nimport { Material } from '../admin-manage-material/material.model';\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css']\n})\nexport class ProfileComponent implements OnInit {\n  //variable related to form\n  hide = true;\n  userType = 'collector';\n  form_recycler: FormGroup;\n  form_collector: FormGroup;\n  isUnique = true;\n  initialError = 'required1';\n  recycler_usernameError  = this.initialError;\n  recycler_passwordError  = this.initialError;\n  recycler_fullNameError  = this.initialError;\n  recycler_addressError   = this.initialError;\n  recycler_scheduleError  = this.initialError;\n  collector_usernameError  = this.initialError;\n  collector_passwordError  = this.initialError;\n  collector_fullNameError  = this.initialError;\n  collector_addressError   = this.initialError;\n  collector_scheduleError  = this.initialError;\n\n  usernameInput = '';\n  private mode = 'recycler';\n  private uniqueUsernameListener: Subscription;\n\n\n\n  //variable related to schedule table\n  week:ScheduleData[]=[];\n  tableLoadLiao = false;\n  result:ScheduleData[]=[];\n  timeIsValid = true;\n  errorMessage = \"\";\n  timeError = \"[invalid time]: time end must be after time start\";\n  validationList : boolean[];\n  errorList : string[];\n\n  timePicker;\n  timeTable;\n\n  //other\n  currentUser;\n  isEditingUser = false;\n  isEditingSched= false;\n\n  //material realted variable\n  materials=[];\n  collectorMaterials=[];\n\n  constructor(\n    private router: Router,\n    public dialog: MatDialog,\n    public authService: AuthService,\n    @Inject(DOCUMENT) document,\n    public materialsService: MaterialsService\n  ) { }\n\n  ngOnInit(): void {\n      this.authService.setCurrentUrl(window.location.pathname);\n\n    //initialiseUserData\n    this.initialiseUserData();\n    if ( this.userType == 'collector' ) {\n      this.initialiseScheduleData();\n    }\n\n    this.initialiseMaterialTable();\n\n    //retrieve material detail\n    //this.materialsService.getMaterialsUpdatedListener().subscribe(){}\n  }\n\n\n  initialiseMaterialTable() {\n\n    this.authService.getCollectorMaterialUpdatedListener().subscribe( result => {\n      //console.log(result);\n      //console.log('table refreshed');\n      //console.log(result);\n      if ( result ) {\n        this.collectorMaterials = result;\n      }  else {\n        this.collectorMaterials = [];\n      }\n    })\n    this.authService.getCollectorMaterials();\n  }\n\n\n  openDialog() {\n    this.materialsService.getAllMaterials().subscribe( result => {\n      //this.materials=[];\n      if ( this.materials.length == 0 ) {\n        for ( let material of result.materials ) {\n          let selected = false;\n          for ( let colMat of this.collectorMaterials ) {\n            if ( colMat._id == material._id ) {\n              selected = true;\n            }\n          }\n          this.materials.push({\n            _id: material._id,\n            materialID: material.materialID,\n            materialName: material.materialName,\n            pointsPerKg: material.pointsPerKg,\n            selected: selected\n          });\n        }\n      }\n\n\n      let dialogRef = this.dialog.open(AddCollectorMaterialDialogComponent, { data: this.materials, disableClose:true });\n      dialogRef.afterClosed().subscribe( result => {\n        this.dialogClosed(result);\n      });\n\n    });\n  }\n\n  dialogClosed( materials: any ) {\n    //console.log(this.materials);\n\n    if ( materials!='false' ) {\n      this.materials=[];\n      this.materials=materials;\n      this.saveCollectorMaterial(materials);\n      //this.initialiseMaterialTable();\n\n    }\n\n\n    //now add material to collectorMaterial list\n  }\n\n  saveCollectorMaterial(materials:any) {\n    //console.log(materials);\n    this.authService.updateMaterial( materials, this.authService.getUserId() );\n    //this.authService.getCollectorMaterials();\n  }\n\n\n  editUserData() {\n    if ( !this.isEditingUser ) {\n      //document.getElementById('btnEdit1').innerHTML = 'Save';\n      document.getElementById('btnEdit1').setAttribute('mode', 'save');\n      this.isEditingUser = true;\n      this.form_collector.enable();\n      this.form_recycler.enable();\n\n      /*let timeTable = document.getElementById('timeTable');\n      let cells = timeTable.getElementsByTagName('td');\n      for (let i=0; i<cells.length; i++){\n        if (cells[i].innerHTML == '-') {\n          cells[i].innerHTML = 'edit';\n        }\n      }*/\n    } else {\n      if ( this.saveUserData() ) {\n        //document.getElementById('btnEdit1').innerHTML = \"Edit\";\n        document.getElementById('btnEdit1').setAttribute('mode', 'edit');\n        this.isEditingUser = false;\n        this.form_collector.disable();\n        this.form_recycler.disable();\n\n        /*let timeTable = document.getElementById('timeTable');\n        let cells = timeTable.getElementsByTagName('td');\n        for (let i=0; i<cells.length; i++){\n          if (cells[i].innerHTML == 'edit') {\n            cells[i].innerHTML = '-';\n          }\n        }*/\n      }\n    }\n\n  }\n\n\n  editScheduleData() {\n    if ( !this.isEditingSched ) {\n\n      //document.getElementById('btnEdit2').innerHTML = 'Save';\n      document.getElementById('btnEdit2').setAttribute('mode', 'save');\n      this.isEditingSched = true;\n      //this.form_collector.enable();\n      //this.form_recycler.enable();\n\n      let timeTable = document.getElementById('timeTable');\n      let cells = timeTable.getElementsByTagName('td');\n      for (let i=0; i<cells.length; i++){\n        if (cells[i].innerHTML == '-') {\n          cells[i].innerHTML = 'edit';\n        }\n      }\n    } else {\n      if ( this.saveScheduleData() ) {\n        //document.getElementById('btnEdit2').innerHTML = \"Edit\";\n        document.getElementById('btnEdit2').setAttribute('mode', 'edit');\n        this.isEditingSched = false;\n        //this.form_collector.disable();\n        //this.form_recycler.disable();\n\n        let timeTable = document.getElementById('timeTable');\n        let cells = timeTable.getElementsByTagName('td');\n        for (let i=0; i<cells.length; i++){\n          if (cells[i].innerHTML == 'edit') {\n            cells[i].innerHTML = '-';\n          }\n        }\n      }\n    }\n  }\n    //this.authService.createColPart1(username, password, fullName, address, schedule, userType);\n\n    //this.authService.createUser(username, password, fullName, address, schedule, userType);\n\n\n  saveUserData() {\n    //console.log('save User Date ran');\n    let formValid;\n    let username;\n    let password;\n    let fullName;\n    let address;\n    let schedule;\n    let userType;\n\n    if ( this.currentUser.userType == 'recycler' ){\n      formValid = !this.form_recycler.invalid;\n      username  = this.form_recycler.get('username').value;\n      password  = this.form_recycler.get('password').value;\n      fullName  = this.form_recycler.get('fullName').value;\n      address   = null;\n      schedule  = null;\n      userType  = \"recycler\";\n    }\n\n    else {\n      formValid = !this.form_collector.invalid;\n      username  = this.form_collector.get('username').value;\n      password  = this.form_collector.get('password').value;\n      fullName  = this.form_collector.get('fullName').value;\n      address   = this.form_collector.get('address').value;\n      schedule  = null;\n      userType  = \"collector\";\n    }\n\n    if ( userType == 'collector' ) {\n      if(formValid){\n      /*  let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n        for(var i=0;i<7;i++){\n          this.result[i].day = weekDay[i];\n          if(this.result[i].startTime==\"edit\" || this.result[i].startTime==\"\"){this.result[i].startTime=null;}\n          if(this.result[i].endTime==\"edit\" || this.result[i].endTime==\"\"){this.result[i].endTime=null;}\n        }*/\n        let userData = {username: username, password:password, fullName:fullName, address:address, schedule:schedule, userType:userType};\n        //let scheduleData = this.result;\n\n        this.authService.updateProfile(userData);\n        this.form_collector.get('password').setValue(null);\n        return true;\n      }\n    } else {\n      if(formValid){\n        let userData = {username: username, password:password, fullName:fullName, address:address, schedule:schedule, userType:userType};\n        this.authService.updateProfile(userData);\n        this.form_recycler.get('password').setValue(null);\n        return true;\n      }\n    }\n\n    return false;\n  }\n\n  saveScheduleData(){\n    if(this.timeIsValid){\n      let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      for(var i=0;i<7;i++){\n        this.result[i].day = weekDay[i];\n        if(this.result[i].startTime==\"edit\" || this.result[i].startTime==\"\"){this.result[i].startTime=null;}\n        if(this.result[i].endTime==\"edit\" || this.result[i].endTime==\"\"){this.result[i].endTime=null;}\n      }\n      let scheduleData = this.result;\n      this.authService.updateSchedule( scheduleData, this.authService.getUserId() );\n      return true;\n    }\n    return false;\n  }\n\n\n\n  resetUser() {\n    this.isEditingUser = false;\n    //document.getElementById('btnEdit1').innerHTML = \"Edit\";\n    document.getElementById('btnEdit1').setAttribute('mode', 'edit');\n    this.initialiseUserData();\n\n  }\n  resetSched() {\n    this.isEditingSched = false;\n    //document.getElementById('btnEdit2').innerHTML = \"Edit\";\n    document.getElementById('btnEdit2').setAttribute('mode', 'edit');\n\n    this.initialiseScheduleData();\n  }\n\n\n\n\n\n\n  //initialisation process\n  initialiseUserData() {\n    this.userType = this.authService.getUserType();\n    this.setFormGroup();\n    this.form_collector.disable();\n    this.form_recycler.disable();\n    let userRetrievedListener : Subscription = this.authService.getUserIsRetrieved().subscribe(\n      (result) => {\n        this.currentUser = result;\n\n        //COLELCTOR\n        this.form_collector.get('username').setValue(result.username);\n        //this.form_collector.get('password').setValue(result.password);\n        this.form_collector.get('fullName').setValue(result.fullName);\n        this.form_collector.get('address').setValue(result.address);\n\n        //RECYCLER\n        this.form_recycler.get('username').setValue(result.username);\n        //this.form_collector.get('password').setValue(result.password);\n        this.form_recycler.get('fullName').setValue(result.fullName);\n\n      });\n    this.authService.getUser();\n  }\n  initialiseScheduleData() {\n    this.timeIsValid = true;\n    this.timePicker = `<form><input matInput class=\"timePicker\" type=\"time\" name=\"\" value=\"\"></form>`;\n    this.timeTable = document.getElementById('timeTable');\n\n    let scheduleRetrievedListener : Subscription = this.authService.getScheduleIsRetrieved().subscribe(\n      (schedule) => {\n        this.result = schedule;\n        this.week =[];\n        let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n        for(var i=0;i<7;i++){\n            if ( schedule[i].startTime == null ) { schedule[i].startTime = '-'; }\n            if ( schedule[i].endTime == null ) { schedule[i].endTime = '-'; }\n            this.week.push({day:weekDay[i], startTime: schedule[i].startTime, endTime: schedule[i].endTime});\n        }\n      });\n    this.authService.getSchedule();\n  }\n\n\n\n  //functions related to form control and user validation\n  xd1() {\n    let username = this.form_recycler.get('username').value;\n    if(username != null && username.length > 0){\n      this.uniqueUsernameListener = this.authService.getuniqueUsernameListener().subscribe(\n        (result) => {\n          if ( username == this.currentUser.username ) {\n            this.isUnique = true;\n          } else {\n            this.isUnique = result;\n            if(!result){\n              this.recycler_usernameError  = \"username is taken\";\n            }\n          }\n          this.form_recycler.controls['username'].updateValueAndValidity();\n        }\n      );\n      this.authService.checkUserExist(username);\n    }\n  }\n  xd2() {\n    let username = this.form_collector.get('username').value;\n    if(username != null && username.length > 0){\n      this.uniqueUsernameListener = this.authService.getuniqueUsernameListener().subscribe(\n        (result) => {\n          if ( username == this.currentUser.username ) {\n            this.isUnique = true;\n          } else {\n            this.isUnique = result;\n            if(!result){\n              this.collector_usernameError  = \"username is taken\";\n            }\n          }\n          this.form_collector.controls['username'].updateValueAndValidity();\n        }\n      );\n      this.authService.checkUserExist(username);\n    }\n  }\n\n  setFormGroup() {\n\n      this.form_recycler = new FormGroup({\n        'username': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.minLength(7),\n            Validators.maxLength(20),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n            this.validateUnique.bind(this)\n          ]\n        }),\n\n        'password': new FormControl(\"\", {\n          validators: [\n            Validators.minLength(7)\n          ]\n        }),\n\n        'fullName': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.maxLength(100)\n          ]\n        }),\n\n        'address': new FormControl(\"\", {}),\n      });\n\n\n\n      this.form_collector = new FormGroup({\n        'username': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.minLength(7),\n            Validators.maxLength(20),\n            Validators.pattern('^[a-zA-Z0-9]+$'),\n            this.validateUnique.bind(this)\n          ]\n        }),\n\n        'password': new FormControl(\"\", {\n          validators: [\n            Validators.minLength(7)\n          ]\n        }),\n\n        'fullName': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.maxLength(100)\n          ]\n        }),\n\n        'address': new FormControl(\"\", {\n          validators: [\n            Validators.required,\n            Validators.maxLength(300)\n          ]\n        }),\n      });\n  }\n  validateRecyclerInput(input: string){\n    this.xd1();\n    switch (input) {\n      case 'recycler_username' :\n        if(this.form_recycler.get('username').hasError('required')) {\n          this.recycler_usernameError  = \"required\";\n        }\n        if (this.form_recycler.get('username').hasError('minlength')) {\n          this.recycler_usernameError  = \"minimum 7 characters\";\n        }\n        if (this.form_recycler.get('username').hasError('maxlength')) {\n          this.recycler_usernameError  = \"maximum 20 charecters\";\n        }\n        if (this.form_recycler.get('username').hasError('pattern')) {\n          this.recycler_usernameError  = \"illegal symbol: number and alphabet only\";\n        }\n        if (this.form_recycler.get('username').hasError('unique')) {\n          this.recycler_usernameError  = \"username is taken\";\n        }\n        break;\n\n      case 'recycler_password' :\n        if(this.form_recycler.get('password').hasError('required')) {\n          this.recycler_passwordError = \"required\";\n        }\n        if (this.form_recycler.get('password').hasError('minlength')) {\n          this.recycler_passwordError = \"minimum 7 characters\";\n        }\n        if (this.form_recycler.get('password').hasError('notMatch')) {\n          this.recycler_passwordError = \"wrong password\";\n        }\n        break;\n\n      case 'recycler_fullName' :\n        if(this.form_recycler.get('fullName').hasError('required')) {\n          this.recycler_fullNameError  = \"required\";\n        }\n        if (this.form_recycler.get('fullName').hasError('maxlength')) {\n          this.recycler_fullNameError  = \"maximum 100 charecters\";\n        }\n        break;\n    }\n  }\n  validateCollectorInput(input: string){\n    this.xd2();\n    switch (input) {\n      case 'collector_username' :\n        if(this.form_collector.get('username').hasError('required')) {\n          this.collector_usernameError  = \"required\";\n        }\n        if (this.form_collector.get('username').hasError('minlength')) {\n          this.collector_usernameError  = \"minimum 7 characters\";\n        }\n        if (this.form_collector.get('username').hasError('maxlength')) {\n          this.collector_usernameError  = \"maximum 20 charecters\";\n        }\n        if (this.form_collector.get('username').hasError('pattern')) {\n          this.collector_usernameError  = \"illegal symbol: number and alphabet only\";\n        }\n        if (this.form_collector.get('username').hasError('unique')) {\n          this.collector_usernameError  = \"username is taken\";\n        }\n        break;\n\n      case 'collector_password' :\n        if(this.form_collector.get('password').hasError('required')) {\n          this.collector_passwordError = \"required\";\n        }\n        if (this.form_collector.get('password').hasError('minlength')) {\n          this.collector_passwordError = \"minimum 7 characters\";\n        }\n        if (this.form_collector.get('password').hasError('notMatch')) {\n          this.collector_passwordError = \"wrong password\";\n        }\n        break;\n\n      case 'collector_fullName' :\n        if(this.form_collector.get('fullName').hasError('required')) {\n          this.collector_fullNameError  = \"required\";\n        }\n        if (this.form_collector.get('fullName').hasError('maxlength')) {\n          this.collector_fullNameError  = \"maximum 100 charecters\";\n        }\n        break;\n\n      case 'collector_address' :\n        if(this.form_collector.get('address').hasError('required')) {\n          this.collector_addressError  = \"required\";\n        }\n        if (this.form_collector.get('address').hasError('maxlength')) {\n          this.collector_addressError  = \"maximum 300 charecters\";\n        }\n        break;\n    }\n  }\n  validateUnique(control: FormControl): ValidationErrors {\n    if(this.isUnique == false){\n      return {unique: 'not'};\n    }\n    return null;\n  }\n\n\n  //functions related to schedule table control and validationList\n  onClick(selectedCell: any){\n    let table     = selectedCell.parentElement;\n    let col2      = table.getElementsByTagName(\"td\")[1];\n    let col3      = table.getElementsByTagName(\"td\")[2];\n\n    let startTime = col2.innerHTML;\n    let endTime   = col3.innerHTML;\n\n    if (selectedCell.getAttribute('editing') == \"true\" && this.isEditingSched) {\n      let cellValue = selectedCell.innerHTML;\n      selectedCell.innerHTML = this.timePicker;\n      selectedCell.getElementsByClassName(\"timePicker\")[0].value = cellValue;\n\n      selectedCell.getElementsByClassName(\"timePicker\")[0].focus();\n      selectedCell.setAttribute('editing', \"true\");\n\n      let data;\n      selectedCell.getElementsByClassName(\"timePicker\")[0].addEventListener(\"blur\", ()=>{\n        data = selectedCell.getElementsByClassName(\"timePicker\")[0].value;\n        if(data){\n          selectedCell.innerHTML = data;\n        } else {\n          selectedCell.innerHTML = 'edit';\n        }\n        //selectedCell.setAttribute('editing', \"false\");\n\n\n\n        //add cell validation here\n        this.validationList = [];\n        this.errorList = [];\n        let validationTable = table.parentElement.parentElement.getElementsByTagName('tr');\n        for( var i=1; i<=7; i++){\n          let col1      = validationTable[i].getElementsByTagName(\"td\")[0];\n          let col2      = validationTable[i].getElementsByTagName(\"td\")[1];\n          let col3      = validationTable[i].getElementsByTagName(\"td\")[2];\n          let isValid;\n          let error;\n          startTime = col2.innerHTML;\n          endTime   = col3.innerHTML;\n          if (startTime=='edit'&&endTime!='edit') {\n            col2.setAttribute('class', 'haveError');\n            isValid = false;\n            error = \"start time undefined for \" + col1.innerHTML;\n          }\n          if (startTime!='edit'&&endTime=='edit') {\n            col3.setAttribute('class', 'haveError');\n            isValid = false;\n            error = \"end time undefined for \" + col1.innerHTML;\n          }\n          if ((startTime=='edit'&&endTime=='edit') || (startTime!='edit'&&endTime!='edit')) {\n            col2.setAttribute('class', ' ');\n            col3.setAttribute('class', ' ');\n            isValid = true;\n            error = \"\";\n\n            if(startTime > endTime) {\n              col2.setAttribute('class', 'haveError');\n              col3.setAttribute('class', 'haveError');\n              isValid = false;\n              error = this.timeError;\n            }\n            if(startTime < endTime) {\n              col2.setAttribute('class', ' ');\n              col3.setAttribute('class', ' ');\n              isValid = true;\n              error = \"\";\n            }\n          }\n          this.errorList.push(error);\n          this.validationList.push(isValid);\n        }\n\n\n        this.errorMessage = \"\";\n        for(var error of this.errorList){\n          if(error != \"\" && error != null){\n            this.errorMessage = error;\n          }\n        }\n        this.timeIsValid = true;\n        for(var valid of this.validationList) {\n          if(!valid){\n            this.timeIsValid = false;\n          }\n        }\n\n        /*if(selectedCell.innerHTML == 'edit'){\n          selectedCell.setAttribute('edited', 'false');\n        } else {\n          selectedCell.setAttribute('edited', 'true');\n        }*/\n\n\n\n        //update table array\n        this.result =[];\n        for ( let row of table.parentElement.getElementsByTagName(\"tr\")){\n          let day = row.getElementsByTagName(\"td\")[0].innerHTML;\n          let startTime = row.getElementsByTagName(\"td\")[1].innerHTML;\n          let endTime = row.getElementsByTagName(\"td\")[2].innerHTML;\n\n          this.result.push({\n            day:row.getElementsByTagName(\"td\")[0].innerHTML,\n            startTime:row.getElementsByTagName(\"td\")[1].innerHTML,\n            endTime:row.getElementsByTagName(\"td\")[2].innerHTML\n          });\n        }\n\n\n      });\n    }\n  }\n\n  tableLoaded (table: any) {\n    if (!this.tableLoadLiao) {\n      let table1 = table;\n      let week1 = [];\n      let weekDay = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n      for(var i=0;i<7;i++){\n          week1.push({day:weekDay[i],startTime: 'edit', endTime:\"edit\"});\n      }\n      this.result =[];\n      for ( let row of table1.getElementsByTagName(\"tbody\")[0].getElementsByTagName('tr')){\n        let day = row.getElementsByTagName(\"td\")[0].innerHTML;\n        let startTime = row.getElementsByTagName(\"td\")[1].innerHTML;\n        let endTime = row.getElementsByTagName(\"td\")[2].innerHTML;\n\n        this.result.push({\n          day:row.getElementsByTagName(\"td\")[0].innerHTML,\n          startTime:row.getElementsByTagName(\"td\")[1].innerHTML,\n          endTime:row.getElementsByTagName(\"td\")[2].innerHTML\n        });\n      }\n    }\n    this.tableLoadLiao = true;\n\n      return null;\n  }\n}\n","<user-nav>\n  <!--title bar with pic-->\n  <div class=\"page-header\" [style.background]=\"'url(/assets/home-pic/recycler_bla35_169.jpg)'\">\n    <div class=\"container-fluid \">\n        <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <div class=\"page-caption\">\n                <h1 class=\"page-title\">Manage Profile</h1>\n              </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n  <main>\n    <div class=\"container-fluid con-main\">\n      <!-- personal detail input group START -->\n      <div class=\"row mt-2 row-form\">\n        <!-- personal detail button group and header START -->\n        <div class=\"row row-control \">\n          <h2>Personal Information</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button (click)=\"resetUser()\" *ngIf=\"isEditingUser\" class=\"btn-cancel\">Cancel</a>\n            <a mat-button (click)=\"editUserData()\" id=\"btnEdit1\" mode=\"edit\" class=\"btn-edit\"> {{ isEditingUser? 'Save' : 'Edit' }} </a>\n          </div>\n        </div>\n        <!-- personal detail button group and header END -->\n        <!-- personal detail from START -->\n        <mat-card class=\"card-form\">\n          <!-- recycler form START -->\n          <div class=\"form-container col-12\" *ngIf=\"userType=='recycler'\">\n\n            <form [formGroup]=\"form_recycler\"   *ngIf=\"userType=='recycler'\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Username</mat-label>\n                <input\n                  name=\"username\"\n                  value='jeff hohohoho seh liao'\n\n                  matInput\n                  type=\"text\"\n                  formControlName=\"username\"\n                  (ngModelChange)=\"validateRecyclerInput('recycler_username')\"\n                  >\n                  <mat-error *ngIf=\"form_recycler.get('username').invalid\">{{ recycler_usernameError  }}</mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input\n                  name=\"password\"\n                  matInput\n                  [type]=\"hide ? 'password' : 'text'\"\n\n                  formControlName=\"password\"\n                  (ngModelChange)=\"validateRecyclerInput('recycler_password')\"\n                  placeholder=\"new password\"\n                  >\n                  <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  </button>\n                  <mat-error *ngIf=\"form_recycler.get('password').invalid\">{{ recycler_passwordError }}</mat-error>\n              </mat-form-field>\n\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Full Name</mat-label>\n                <input\n                  name=\"fullName\"\n                  matInput\n                  type=\"text\"\n\n                  formControlName=\"fullName\"\n                  (ngModelChange)=\"validateRecyclerInput('recycler_fullName')\"\n\n                  >\n                  <mat-error *ngIf=\"form_recycler.get('fullName').invalid\">{{ recycler_fullNameError }}</mat-error>\n              </mat-form-field>\n            </form>\n          </div>\n          <!-- recycler form END -->\n          <!-- collector form START -->\n          <div class=\"form-container col-12\" *ngIf=\"userType=='collector'\">\n\n            <form [formGroup]=\"form_collector\"   *ngIf=\"userType=='collector'\">\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Username</mat-label>\n                <input\n                  name=\"username\"\n                  matInput\n                  type=\"text\"\n                  formControlName=\"username\"\n                  (ngModelChange)=\"validateCollectorInput('collector_username')\"\n                  required\n                  >\n                  <mat-error *ngIf=\"form_collector.get('username').invalid\">{{ collector_usernameError  }}</mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Password</mat-label>\n                <input\n                  name=\"password\"\n                  matInput\n                  [type]=\"hide ? 'password' : 'text'\"\n                  formControlName=\"password\"\n                  (ngModelChange)=\"validateCollectorInput('collector_password')\"\n                  placeholder=\"new password\"\n                  >\n                  <button mat-icon-button matSuffix (click)=\"hide = !hide\" [attr.aria-label]=\"'Hide password'\" [attr.aria-pressed]=\"hide\">\n                    <mat-icon>{{hide ? 'visibility_off' : 'visibility'}}</mat-icon>\n                  </button>\n                  <mat-error *ngIf=\"form_collector.get('password').invalid\">{{ collector_passwordError }}</mat-error>\n              </mat-form-field>\n\n\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Full Name</mat-label>\n                <input\n                  name=\"fullName\"\n                  matInput\n                  type=\"text\"\n                  formControlName=\"fullName\"\n                  (ngModelChange)=\"validateCollectorInput('collector_fullName')\"\n                  required\n                  >\n                  <mat-error *ngIf=\"form_collector.get('fullName').invalid\">{{ collector_fullNameError }}</mat-error>\n              </mat-form-field>\n\n              <mat-form-field appearance=\"outline\">\n                <mat-label>Address</mat-label>\n                <textarea rows=\"1\" cols=\"80\"\n                  name=\"address\"\n                  matInput\n                  type=\"text\"\n                  formControlName=\"address\"\n                  (ngModelChange)=\"validateCollectorInput('collector_address')\"\n                  required\n                  ></textarea>\n                  <mat-error *ngIf=\"form_collector.get('address').invalid\">{{ collector_addressError }}</mat-error>\n              </mat-form-field>\n            </form>\n          </div>\n          <!-- collector form END -->\n        </mat-card>\n        <!-- personal detail from END -->\n      </div>\n      <!-- personal detail input group END -->\n\n      <!-- Schedule table START -->\n      <div class=\"row row-table \" *ngIf=\"userType=='collector'\">\n        <div class=\"row row-control\">\n          <h2>Collector Schedule</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button (click)=\"resetSched()\" *ngIf=\"isEditingSched\" class=\"btn-cancel\">Cancel</a>\n            <a mat-button (click)=\"editScheduleData()\" id=\"btnEdit2\" mode=\"edit\" class=\"btn-edit\"> {{ isEditingSched? 'Save' : 'Edit' }} </a>\n          </div>\n        </div>\n        <div class=\"table-con col-12\" *ngIf=\"userType=='collector'\">\n          <mat-card class=\"card-schedule\">\n            <mat-card-content>\n              <table #timeTable class=\"table\" id=\"timeTable\">\n                <thead>\n                  <tr>\n                    <th></th>\n                    <th>start time</th>\n                    <th>end time</th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr *ngFor=\"let day of week\">\n                    <td class=\"myCol\"><b>{{ day.day }}</b></td>\n                    <td class=\"myCol\" #col2 (click)=\"onClick(col2)\" [attr.editing]=\"isEditingSched\" edited=\"false\" mode=\"edit\">{{ day.startTime }}</td>\n                    <td class=\"myCol\" #col3 (click)=\"onClick(col3)\" [attr.editing]=\"isEditingSched\" edited=\"false\" mode=\"edit\">{{ day.endTime }}</td>\n                  </tr>\n                </tbody>\n              </table>\n            </mat-card-content>\n          </mat-card>\n          <div class=\"haveError tableError text-center\">{{ errorMessage }}</div>\n          {{ tableLoaded(timeTable) }}\n        </div>\n      </div>\n      <!-- Schedule table END -->\n\n\n      <!-- collectorMaterial START -->\n      <div class=\"row row-mat-table\" *ngIf=\"userType=='collector'\">\n        <div class=\"row row-control\">\n          <h2>Material Preferences</h2>\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button (click)=\"openDialog()\"  class=\"btn-edit\">Manage</a>\n            <!--<a mat-button (click)=\"resetSched()\" *ngIf=\"isEditingSched\" class=\"btn-cancel\">Cancel</a>-->\n            <!--<a mat-button (click)=\"editScheduleData()\" id=\"btnEdit2\" mode=\"edit\" class=\"btn-edit\"> Edit </a>-->\n          </div>\n        </div>\n\n        <div class=\"table-con col-12\" *ngIf=\"userType=='collector'\">\n          <mat-card class=\"card-colMat\">\n            <table class=\"table table-colMat\" *ngIf=\"collectorMaterials.length!=0\" >\n              <thead>\n                <tr>\n                  <th>Material Id</th>\n                  <th>Material Name</th>\n                  <th>Points Per Kg</th>\n                </tr>\n              </thead>\n              <tbody >\n                <tr *ngFor=\"let material of collectorMaterials\">\n                  <td>{{ material.materialID }}</td>\n                  <td>{{ material.materialName }}</td>\n                  <td>{{ material.pointsPerKg }}</td>\n                </tr>\n              </tbody>\n            </table>\n\n            <div *ngIf=\"collectorMaterials.length==0\" class=\"text-center\">\n              <br>\n              No material yet, click <span class=\"btn-edit\" (click)=\"openDialog()\">Manage</span> to add more\n              <br><br>\n            </div>\n          </mat-card>\n        </div>\n\n      </div>\n      <!-- collectorMaterial END -->\n\n\n    </div>\n  </main>\n</user-nav>\n","import { Injectable, OnInit } from '@angular/core';\nimport { HttpClient } from '@angular/common/http';\nimport { Router } from '@angular/router';\nimport { Observable, Subject } from 'rxjs';\nimport { MaterialService } from '../datatable/shared/material.service';\nimport { AuthService } from '../auth/auth.service';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SubmissionService implements OnInit{\n\n  subRetrievedListener = new Subject<any>();\n\n  constructor(\n    private http: HttpClient,\n    public router: Router,\n    public materialService: MaterialService,\n    public authService: AuthService\n  ) { }\n\n  ngOnInit(): void {\n\n  }\n\n  updateSubmission(submission) {\n    console.log('reached updateSubmission at service');\n    this.http\n      .post(\n        'http://localhost:3000/api/submission/updateSubmission',\n        {submission: submission}\n      )\n      .subscribe( result => {\n        console.log('submission added');\n        this.getSubmissions(null);\n      });\n  }\n\n  addSubmission(submission) {\n    this.http\n      .post(\n        'http://localhost:3000/api/submission/addSubmission',\n        {submission: submission}\n      )\n      .subscribe( result => {\n        console.log('submission added');\n        this.getSubmissions(null);\n      });\n  }\n\n\n  getSubRetrievedListerner() {\n    return this.subRetrievedListener.asObservable();\n  }\n  /*\n    View Submission History process\n      1. select view submission History\n      2. list of material shown\n      3. select material\n      4. list of submission shown (can filter by actual date or status)\n\n  */\n\n  //ask backend to generate dummy submissions\n  genDummySub() {\n    console.log('gen dummy rans');\n    this.http.post( 'http://localhost:3000/api/submission/test', { message: 'gay' } ).subscribe();\n  }\n\n\n  //get Submission by material type for a user\n  getSubmissions(material: any, recycler = null) {\n    let criteria = {} as any;\n    let userId = this.authService.getUserId();\n    let userType = this.authService.getUserType();\n    //console.log( 'userId: ' + userId + \"\\nuserType: \" + userType );\n\n    if ( material ) {\n      criteria.material = material;\n    } else {\n      criteria.status = 'Proposed';\n    }\n\n    if ( recycler ) {\n      criteria.recyclerId = recycler;\n    }\n\n    switch (userType) {\n      case 'recycler' :\n        criteria.recyclerId = userId;\n        break;\n      case 'collector' :\n        criteria.collectorId = userId;\n        break;\n    }\n\n    this\n      .http\n      .post(\n        'http://localhost:3000/api/submission/getSubmissions',\n        criteria\n      )\n      .subscribe( result => {\n        console.log('submission retrieved');\n        this.subRetrievedListener.next(result);\n      });\n  }\n\n  //get Submission by material type for admin\n  getAllSubmissions(materials: any) {\n  }\n\n}\n\n\n// remember to make material id auto generate in add material of admin\n\n/*\n  recycler add appointment process\n    1. select add appointment\n    2. list of material displayed\n    3. select material\n    4. list of collector that collect the material displayed\n    5. select collector\n    6. select proposed data\n    7. submit appointment\n\n  collector record submission process\n    0. select confirm submission\n    1. enter recycler username\n    2. submission related to the recycler are show\n    3. select submission\n    4. enter weightInKg (can update material)\n    5. submit Submission\n\n  collector add submission process\n    1. select add submission\n    2. record material , recycler's username, weightInKg\n    3. submit Submission\n*/\n","import { Component, OnInit} from '@angular/core';\nimport { AuthService } from '../auth/auth.service';\nimport { SubmissionService } from '../submission/submission.service';\nimport { MaterialsService } from '../admin-manage-material/material.service';\nimport { AppointmentService } from '../appointment/appointment.service';\nimport { ConstantPool } from '@angular/compiler';\nimport { NgForm } from '@angular/forms';\n\n@Component({\n  selector:'user-make-appointment',\n  templateUrl: './user-make-appointment.component.html',\n  styleUrls: ['./user-make-appointment.component.css']\n\n})\n\nexport class MakeAppointmentComponent implements OnInit{\n\n  viewCollectorMaterial = false;\n  viewSubmitAppointment = false;\n  viewDone = false;\n  showLoadingBar = true;\n  mobile = false;\n  materials;\n  material;\n  today = new Date();\n  errorDateMsg = true;\n\n\n\n  collector;\n  //list of collector\n  collectors;\n\n  constructor(\n    public authService: AuthService,\n    public subService: SubmissionService,\n    public matService: MaterialsService,\n    public appmtService : AppointmentService\n  ) { }\n\n  ngOnInit(): void {\n    this.authService.setCurrentUrl(window.location.pathname);\n\n    this.subscribeToMaterialsUpdate();\n    this.getMaterials();\n    this.onResize(null);\n    this.errorDateMsg = true;\n\n\n\n  }\n  onResize(event) {\n\n    if (window.screen.width < 850) { // 768px portrait\n      this.mobile=true;\n    } else {\n      this.mobile=false;\n    }\n    //console.log('size: ' + window.screen.width + \" mobile: \" + this.mobile);\n  }\n\n  subscribeToMaterialsUpdate() {\n    this.matService.getMaterialsUpdatedListener().subscribe( result => {\n      this.getMaterials();\n    });\n  }\n\n  //get material from material service\n  getMaterials() {\n    console.log('ran');\n    this.matService.getAllMaterials().subscribe( result => {\n      this.materials = [];\n      for ( let mat of result.materials ) {\n        mat = Object.assign({}, mat);\n        mat.selected = false;\n        this.materials.push(mat);\n      }\n      console.log(this.materials);\n\n      if (this.materials!=null){\n        this.showLoadingBar = false;\n      }\n    });\n\n  }\n\n  selectMaterial(i) {\n    this.material = this.materials[i];\n    console.log('material ID: ' + this.material._id);\n    this.collectors = [];\n    this.getCollectorMaterial();\n    this.viewCollectorMaterial = true;\n  }\n\n  getCollectorMaterial(){\n    this.matService.getCollectors(this.material._id).subscribe( result => {\n      console.log(result);\n      this.collectors = result;\n      for ( let collector of this.collectors){\n        console.log(collector);\n      }\n    });\n  }\n\n  selectCollector(i){\n    console.log(this.collectors[i]);\n    this.collector = this.collectors[i];\n    console.log('Collector ID: ' + this.collector.collectorID);\n    console.log('Collector Name: ' + this.collector.collectorUsername);\n    this.viewSubmitAppointment = true;\n\n  }\n\n\n\n\n  onSubmitAppointment(form: NgForm){\n    if (form.invalid) {\n      return;\n    }\n    else if(form.value.proposedDate < this.today){\n      this.errorDateMsg = false;\n      return;\n    }\n    else{\n\n    //date validation\n\n    //let date = today.getFullYear()+'/'+  ('0'+(today.getMonth()+1)).slice(-2)  +'/'+('0'+today.getDate()).slice(-2);\n    //date format use string yyyy/mm/dd\n    let date = form.value.proposedDate;\n    let inProposedDate = date.getFullYear()+'/'+('0'+(date.getMonth()+1)).slice(-2)  +'/'+('0'+date.getDate()).slice(-2);\n    let submission;\n\n      submission = {\n        //_id: this.selectedAppointment._id,\n        submissionID: null,\n        proposedDate: inProposedDate,\n        actualDate: null,\n        weightInKg: null,\n        material: this.material._id,\n        pointsAwarded: null,\n        status: 'Proposed',\n        recycler: this.authService.getUserId(),\n        collector: this.collector.collectorID\n      };\n      console.log(submission);\n      //console.log(this.today);\n      this.subService.addSubmission(submission);\n      this.viewDone = true;\n    }\n  }\n\n  newAppointment(){\n    this.viewCollectorMaterial = false;\n    this.viewSubmitAppointment = false;\n    this.viewDone = false;\n  }\n\n}\n","<user-nav (window:resize)=\"onResize($event)\">\n  <!--title bar with pic-->\n  <div class=\"page-header\" [style.background]=\"'url(/assets/home-pic/recycler_bla35_169.jpg)'\">\n    <div class=\"container-fluid \">\n        <div class=\"row\">\n            <div class=\"col-xl-12 col-lg-12 col-md-12 col-sm-12 col-12\">\n              <div class=\"page-caption\">\n                <h1 class=\"page-title\">Make Appointment</h1>\n              </div>\n            </div>\n        </div>\n    </div>\n  </div>\n\n\n\n  <main>\n    <div class=\"container-fluid page-area\">\n\n      <!--List of Materials-->\n      <div *ngIf=\"!viewCollectorMaterial && !viewSubmitAppointment && !viewDone\" class=\"row mt-2 row-material-table\">\n\n        <div class=\"container\">\n        <div class=\"row row-control\">\n          <div>\n            <h3 class=\"font-weight-bold\">First Step:</h3>\n            <p class=\"font-italic\"><i class=\"far fa-hand-point-right\"></i> Select the material type of recycling item.</p>\n          </div>\n\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <!--<a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\"> back </a>-->\n          </div>\n        </div>\n       </div>\n\n       <div class=\"container-fluid mb-5\">\n        <mat-card>\n          <mat-card-content>\n            <table class=\"table table-materials table-hover\" >\n              <thead>\n                <th>ID</th>\n                <th>Name</th>\n                <th *ngIf=\"!mobile\">Description</th>\n                <th>Points/Kg</th>\n                <th></th>\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let mat of materials; let i = index\" class=\"material-row\" (click)=\"selectMaterial(i)\">\n                  <td>{{ mat.materialID }}</td>\n                  <td>{{ mat.materialName }}</td>\n                  <td *ngIf=\"!mobile\">{{ mat.description? mat.description : 'N/A' }}</td>\n                  <td>{{ mat.pointsPerKg || mat.pointsPerKg.toString() == '0'? mat.pointsPerKg : 'N/A' }}</td>\n                  <td><mat-icon >navigate_next</mat-icon><!--<span *ngIf=\"!mobile\">Select</span>--></td>\n                </tr>\n\n\n                <!--show loading while waiting data to load from database-->\n                <tr *ngIf=\"showLoadingBar\">\n                  <td>\n                    <div class=\"container\">\n                      <mat-spinner></mat-spinner>\n                      <br>\n                      <span>Loading data.....</span>\n                    </div>\n\n                  </td>\n                </tr>\n              </tbody>\n            </table>\n            <p class=\"mat-body-1 text-center pb-3\" *ngIf=\"materials.length <= 0 && !showLoadingBar\">\n              No material is available.\n            </p>\n          </mat-card-content>\n        </mat-card>\n      </div>\n      </div>\n\n\n       <!--List of Collectors-->\n       <div *ngIf=\"viewCollectorMaterial && !viewSubmitAppointment && !viewDone\" class=\"row mt-2 row-material-table\">\n\n        <div class=\"container\">\n        <div class=\"row row-control\">\n          <div>\n            <h3 class=\"font-weight-bold\">Second Step:</h3>\n            <p class=\"font-italic\"><i class=\"far fa-hand-point-right\"></i> Select a collector to submit materials.</p>\n          </div>\n\n          <div class=\"spacer\"></div>\n          <div class=\"row row-action\">\n            <a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\" (click)=\"viewCollectorMaterial=false\"> Back </a>\n          </div>\n        </div>\n       </div>\n\n       <!--list of collectors-->\n       <div class=\"container-fluid\">\n        <mat-card>\n          <mat-card-content>\n            <table class=\"table table-materials table-hover\" >\n              <thead>\n                <th>Collector's Username</th>\n                <th>Collector's Fullname</th>\n                <th>Collector's Address</th>\n                <!--<th>Material ID</th>-->\n                <!--<th>Material Name</th>-->\n              </thead>\n              <tbody>\n                <tr *ngFor=\"let collector of collectors; let c = index\" class=\"material-row\" (click)=\"selectCollector(c)\">\n                  <td>{{ collector.collectorUsername}}</td>\n                  <td>{{ collector.collectorFullName}}</td>\n                  <td>{{ collector.collectorAddress }}</td>\n                  <!--<td>{{ collector.material }}</td>-->\n                  <!--<td>{{ collector.materialName }}</td>-->\n                  <td><mat-icon >navigate_next</mat-icon><!--<span *ngIf=\"!mobile\">Select</span>--></td>\n                </tr>\n\n\n                <!--show loading while waiting data to load from database-->\n                <tr *ngIf=\"showLoadingBar\">\n                  <td>\n                    <div class=\"container\">\n                      <mat-spinner></mat-spinner>\n                      <br>\n                      <span>Loading data.....</span>\n                    </div>\n\n                  </td>\n                </tr>\n\n\n\n              </tbody>\n            </table>\n            <p class=\"mat-body-1 text-center pb-3\" *ngIf=\"collectors.length <= 0 && !showLoadingBar\">\n              No Collector is available.\n            </p>\n\n          </mat-card-content>\n        </mat-card>\n        </div>\n\n      </div>\n\n      <!--submitAppointmentForm-->\n      <div *ngIf=\"viewSubmitAppointment && !viewDone\" class=\"row mt-2 mb-5 row-material-table\">\n        <div class=\"container\">\n          <div class=\"row row-control\">\n            <div>\n              <h3 class=\"font-weight-bold\">Final Step:</h3>\n              <p class=\"font-italic\"><i class=\"far fa-hand-point-right\"></i> Select a propose date and submit your appointment.</p>\n            </div>\n\n            <div class=\"spacer\"></div>\n            <div class=\"row row-action\">\n              <a mat-button  id=\"btnEdit1\" mode=\"edit\" class=\"btn-back\" (click)=\"viewSubmitAppointment=false\"> Back </a>\n            </div>\n          </div>\n         </div>\n\n         <div class=\"container-fluid\">\n          <mat-card class=\"p-4\">\n            <div class=\"container\">\n            <form (submit)=\"onSubmitAppointment(appointmentForm)\" #appointmentForm=\"ngForm\">\n              <!--<div class=\"row \">-->\n              <div class=\"form-group col-lg-6 col-md-12 col-sm-12\">\n                <label for=\"collectorName\"><i class=\"fas fa-user\"></i>  Collector's Username : </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  name=\"collectorName\"\n                  #collectorName =\"ngModel\"\n                  [ngModel] = \"collector.collectorUsername\"\n                  readonly\n                  >\n              </div>\n\n              <div class=\"form-group col-lg-6 col-md-12 col-sm-12\">\n                <label for=\"collectorName\"><i class=\"fas fa-box-open\"></i>  Material Type : </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  name=\"materialType\"\n                  #materialType =\"ngModel\"\n                  [ngModel] = \"material.materialName\"\n                  readonly\n                  >\n              </div>\n\n              <div class=\"form-group col-lg-6 col-md-12 col-sm-12\">\n                <label for=\"collectorAddress\"><i class=\"fas fa-map-marker-alt\"></i>  Address : </label>\n                <input\n                  type=\"text\"\n                  class=\"form-control\"\n                  name=\"collectorAddress\"\n                  #materialType =\"ngModel\"\n                  [ngModel] = \"collector.collectorAddress\"\n                  readonly\n                  >\n              </div>\n            <!--</div>-->\n\n            <div class=\"container\">\n              <label class=\"font-weight-bold\">Pick a date for submission: </label>\n              &nbsp;\n              <mat-form-field>\n                <mat-label>Propose Date</mat-label>\n                <input\n                  matInput\n                  name=\"proposedDate\"\n                  [matDatepicker]=\"picker\"\n                  #proposedDate = \"ngModel\"\n                  [ngModel] = \"\"\n                  required\n                  >\n                  <mat-error *ngIf=\"proposedDate.invalid\">Please pick a propose date.</mat-error>\n\n                <mat-datepicker-toggle matSuffix [for]=\"picker\"></mat-datepicker-toggle>\n                <mat-datepicker #picker></mat-datepicker>\n              </mat-form-field>\n              <small class=\"text-danger\" *ngIf=\"(!errorDateMsg)\">Make sure it is a valid Proposed Date!!</small>\n            </div>\n\n              <div class=\"container text-right\">\n                <button mat-raised-button color=\"primary\" type =\"submit\">Submit Appointment <span class=\"material-icons\">\n                  event_available\n                  </span></button>\n              </div>\n\n            </form>\n          </div>\n          </mat-card>\n         </div>\n      </div>\n\n      <div *ngIf=\"viewDone\" class=\"row mt-2 mb-5 row-material-table\">\n        <div class=\"container\">\n          <div class=\"row row-control\">\n            <div>\n              <h1 class=\"display-4\"><i class=\"far fa-check-circle text-success\"></i> New Appointment has submitted!</h1>\n            </div>\n          </div>\n         </div>\n\n         <div class=\"container-fluid\">\n          <mat-card class=\"pt-3 pb-4\">\n            <small class=\"ml-4 mb-2\">Select action:</small>\n            <div class=\"container text-center mt-3\">\n              <button (click)=\"newAppointment()\" class=\"mr-3 col-4\" mat-raised-button color=\"primary\" type =\"submit\">\n                <span>New Appointment</span> &nbsp; <i class=\"fas fa-plus-circle\"></i></button>\n\n                <button [routerLink]=\"['/record-submission']\" class=\"ml-3 col-4\" mat-raised-button color=\"primary\" type =\"submit\">\n                  <span>View All Appointment</span>  &nbsp;  <i class=\"fas fa-calendar-check\"></i></button>\n            </div>\n          </mat-card>\n         </div>\n\n\n      </div>\n\n\n\n\n    </div>\n  </main>\n</user-nav>\n","import { Component } from '@angular/core';\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\nimport { Observable } from 'rxjs';\nimport { map, shareReplay } from 'rxjs/operators';\nimport { AuthService } from '../auth/auth.service';\n\n@Component({\n  selector: 'user-nav',\n  templateUrl: './user-nav.component.html',\n  styleUrls: ['./user-nav.component.css']\n})\nexport class UserNavComponent {\n\n\n\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\n    .pipe(\n      map(result => result.matches),\n      shareReplay()\n    );\n\n  constructor(private breakpointObserver: BreakpointObserver, public auhtService: AuthService) {}\n\n    userType    = this.auhtService.getUserType();\n    list_item_1 = '';\n    list_item_2 = '';\n    list_item_3 = '';\n    list_item_4 = '';\n    list_item_5 = '';\n    list_item_6 = '';\n\n    route1;\n    route2;\n    route3;\n    route4;\n    route5;\n    route6;\n\n\n    titleName(){\n      if (this.userType=='collector'){\n        return 'ESWEB | Collector';\n      }\n\n      if (this.userType=='recycler'){\n        return 'ESWEB | Recycler';\n      }\n\n    }\n    ngOnInit(){\n\n      if (this.userType=='collector'){\n        this.list_item_1 = 'Dashboard';\n        this.list_item_2 = 'Manage Profile';\n        this.list_item_3 = 'Submission History';\n        this.list_item_4 = 'View All Appointment';\n        this.list_item_5 = 'Add New Collection';\n        this.list_item_6 = 'Logout';\n\n        this.route1 = '/dashboard-collector';\n        this.route2 = '/manage-profile';\n        this.route3 = '/history';\n        this.route4 = '/record-submission';\n        this.route5 = '/add-submission';\n        this.route6 = '';\n\n      }\n\n      if (this.userType=='recycler'){\n        this.list_item_1 = 'Dashboard';\n        this.list_item_2 = 'Manage Profile';\n        this.list_item_3 = 'Submission History';\n        this.list_item_4 = 'View All Appointments';\n        this.list_item_5 = 'Add new Appointment';\n        this.list_item_6 = 'Logout';\n\n        this.route1 = '/dashboard-user';\n        this.route2 = '/manage-profile';\n        this.route3 = '/history';\n        this.route4 = '/record-submission';\n        this.route5 = '/make-appointment';\n        this.route6 = '';\n\n      }\n\n\n    }\n\n    logout(){\n      this.auhtService.logout();\n    }\n\n\n}\n","<mat-sidenav-container class=\"sidenav-container\">\n  <mat-sidenav #drawer class=\"sidenav\" fixedInViewport\n    fixedInViewport=\"false\"\n    [attr.role]=\"(isHandset$ | async) ? 'dialog' : 'navigation'\"\n    [mode]=\"(isHandset$ | async) ? 'over' : 'side'\"\n    [opened]=\"(isHandset$ | async) === false\">\n    <mat-toolbar>{{ titleName() }}</mat-toolbar>\n    <mat-nav-list>\n      <a mat-list-item [routerLink]=\"route1\" routerLinkActive=\"active-link\"><i class=\"fas fa-home\"></i> &nbsp; {{ list_item_1 }}</a>\n      <a mat-list-item [routerLink]=\"route2\" routerLinkActive=\"active-link\"><i class=\"fas fa-user-edit\"></i> &nbsp; {{ list_item_2 }}</a>\n      <a mat-list-item [routerLink]=\"route3\" routerLinkActive=\"active-link\"><i class=\"fas fa-binoculars\"></i> &nbsp; {{ list_item_3 }}</a>\n      <a mat-list-item [routerLink]=\"route4\" routerLinkActive=\"active-link\"><i class=\"fas fa-calendar-check\"></i> &nbsp; {{ list_item_4 }}</a>\n      <a mat-list-item [routerLink]=\"route5\" routerLinkActive=\"active-link\"><i class=\"fas fa-plus-circle\"></i> &nbsp; {{ list_item_5 }}</a>\n      <a (click)=\"logout()\" routerLink=\"/home\" routerLinkActive=\"active-link\" mat-list-item href=\"#\"><i class=\"fas fa-sign-out-alt\"></i> &nbsp; {{ list_item_6 }}</a>\n    </mat-nav-list>\n  </mat-sidenav>\n  <mat-sidenav-content>\n    <mat-toolbar color=\"primary\">\n      <button\n        type=\"button\"\n        aria-label=\"Toggle sidenav\"\n        mat-icon-button\n        (click)=\"drawer.toggle()\"\n        *ngIf=\"isHandset$ | async\">\n        <mat-icon aria-label=\"Side nav toggle icon\">menu</mat-icon>\n      </button>\n      <span class=\"spacer\"></span>\n        <span><i class=\"fas fa-recycle\"></i> ESWEB</span>\n    </mat-toolbar>\n    <ng-content></ng-content>\n    <!-- Add Content Here -->\n  </mat-sidenav-content>\n</mat-sidenav-container>\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"]}